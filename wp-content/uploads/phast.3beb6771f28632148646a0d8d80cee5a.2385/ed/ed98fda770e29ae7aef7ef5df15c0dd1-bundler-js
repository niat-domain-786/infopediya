0 3 9c3efb7f0006deedfe03a80a3c6cb2b2 a:5:{s:8:"dataType";s:8:"resource";s:3:"url";s:64:"https://infopediya.com/wp-content/mmr/7edf4309-1608990702.min.js";s:8:"mimeType";s:22:"application/javascript";s:4:"blob";s:177832:"(function($,d,w,undefined){var busy=!1;$(d).on('mouseenter','#wp-admin-bar-imagify',function(){var $adminBarProfile,url;if(!0===busy){return}
busy=!0;$adminBarProfile=$('#wp-admin-bar-imagify-profile-content');if(!$adminBarProfile.is(':empty')){return}
if(w.ajaxurl){url=w.ajaxurl}else{url=w.imagifyAdminBar.ajaxurl}
url+=url.indexOf('?')>0?'&':'?';$.get(url+'action=imagify_get_admin_bar_profile&imagifygetadminbarprofilenonce='+$('#imagifygetadminbarprofilenonce').val()).done(function(response){$adminBarProfile.html(response.data);$('#wp-admin-bar-imagify-profile-loading').remove();busy=!1})})})(jQuery,document,window);
/*!
* Rank Math
*
* @version 0.9.0
* @author  RankMath
*/
;(function($){'use strict';$(function(){window.rankMathFront={init:function(){this.adminMenu()},adminMenu:function(){var menu=$('#wp-admin-bar-rank-math-mark-me'),self=this,icon='<span class="dashicons dashicons-yes" style="font-family: dashicons; font-size: 19px;"></span>';menu.on('click','.mark-page-as a',function(event){event.preventDefault();self.ajax('mark_page_as',{objectID:rankMath.objectID,objectType:rankMath.objectType,what:$(this).attr('href').replace('#','')});if($(this).find('.dashicons').length){$(this).find('.dashicons').remove()}else{$(this).prepend(icon)}})},ajax:function(action,data,method){return $.ajax({url:rankMath.ajaxurl,type:method||'POST',dataType:'json',data:$.extend(!0,{action:'rank_math_'+action,security:rankMath.security},data)})}};window.rankMathFront.init()})})(jQuery);window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(e,t){var o,n=this.length;for(t=t||window,o=0;o<n;o++)e.call(t,this[o],o,this)}),function(){"use strict";function e(){var e=window,t=document;if(!("scrollBehavior"in t.documentElement.style)||!0===e.__forceSmoothScrollPolyfill__){var o,n=e.HTMLElement||e.Element,i=468,r={scroll:e.scroll||e.scrollTo,scrollBy:e.scrollBy,elementScroll:n.prototype.scroll||s,scrollIntoView:n.prototype.scrollIntoView},l=e.performance&&e.performance.now?e.performance.now.bind(e.performance):Date.now,a=(o=e.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(o)?1:0);e.scroll=e.scrollTo=function(){void 0!==arguments[0]&&(!0!==d(arguments[0])?g.call(e,t.body,void 0!==arguments[0].left?~~arguments[0].left:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:e.scrollY||e.pageYOffset):r.scroll.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:e.scrollX||e.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:e.scrollY||e.pageYOffset))},e.scrollBy=function(){void 0!==arguments[0]&&(d(arguments[0])?r.scrollBy.call(e,void 0!==arguments[0].left?arguments[0].left:"object"!=typeof arguments[0]?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):g.call(e,t.body,~~arguments[0].left+(e.scrollX||e.pageXOffset),~~arguments[0].top+(e.scrollY||e.pageYOffset)))},n.prototype.scroll=n.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==d(arguments[0])){var e=arguments[0].left,t=arguments[0].top;g.call(this,this,void 0===e?this.scrollLeft:~~e,void 0===t?this.scrollTop:~~t)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!=typeof arguments[0]?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},n.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==d(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):r.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},n.prototype.scrollIntoView=function(){if(!0!==d(arguments[0])){var o=function(e){for(;e!==t.body&&!1===(n=c(o=e,"Y")&&u(o,"Y"),i=c(o,"X")&&u(o,"X"),n||i);)e=e.parentNode||e.host;var o,n,i;return e}(this),n=o.getBoundingClientRect(),i=this.getBoundingClientRect();o!==t.body?(g.call(this,o,o.scrollLeft+i.left-n.left,o.scrollTop+i.top-n.top),"fixed"!==e.getComputedStyle(o).position&&e.scrollBy({left:n.left,top:n.top,behavior:"smooth"})):e.scrollBy({left:i.left,top:i.top,behavior:"smooth"})}else r.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function s(e,t){this.scrollLeft=e,this.scrollTop=t}function d(e){if(null===e||"object"!=typeof e||void 0===e.behavior||"auto"===e.behavior||"instant"===e.behavior)return!0;if("object"==typeof e&&"smooth"===e.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+e.behavior+" is not a valid value for enumeration ScrollBehavior.")}function c(e,t){return"Y"===t?e.clientHeight+a<e.scrollHeight:"X"===t?e.clientWidth+a<e.scrollWidth:void 0}function u(t,o){var n=e.getComputedStyle(t,null)["overflow"+o];return"auto"===n||"scroll"===n}function f(t){var o,n,r,a,s=(l()-t.startTime)/i;a=s=s>1?1:s,o=.5*(1-Math.cos(Math.PI*a)),n=t.startX+(t.x-t.startX)*o,r=t.startY+(t.y-t.startY)*o,t.method.call(t.scrollable,n,r),n===t.x&&r===t.y||e.requestAnimationFrame(f.bind(e,t))}function g(o,n,i){var a,d,c,u,g=l();o===t.body?(a=e,d=e.scrollX||e.pageXOffset,c=e.scrollY||e.pageYOffset,u=r.scroll):(a=o,d=o.scrollLeft,c=o.scrollTop,u=s),f({scrollable:a,method:u,startTime:g,startX:d,startY:c,x:n,y:i})}}"object"==typeof exports&&"undefined"!=typeof module?module.exports={polyfill:e}:e()}(),function(){"use strict";window.kadence={initOutlineToggle:function(){document.body.addEventListener("keydown",(function(){document.body.classList.remove("hide-focus-outline")})),document.body.addEventListener("mousedown",(function(){document.body.classList.add("hide-focus-outline")}))},getOffset:function(e){if(e instanceof HTMLElement){var t=e.getBoundingClientRect();return{top:t.top+window.pageYOffset,left:t.left+window.pageXOffset}}return{top:null,left:null}},findParents:function(e,t){var o=[];return function e(n){var i=n.parentNode;i instanceof HTMLElement&&(i.matches(t)&&o.push(i),e(i))}(e),o},toggleAttribute:function(e,t,o,n){void 0===o&&(o=!0),void 0===n&&(n=!1),e.getAttribute(t)!==o?e.setAttribute(t,o):e.setAttribute(t,n)},initNavToggleSubmenus:function(){var e=document.querySelectorAll(".nav--toggle-sub");if(e.length)for(let t=0;t<e.length;t++)window.kadence.initEachNavToggleSubmenu(e[t])},initEachNavToggleSubmenu:function(e){var t=e.querySelectorAll(".menu ul");if(t.length)for(let n=0;n<t.length;n++){var o=t[n].parentNode;let e=o.querySelector(".dropdown-nav-toggle");e&&(e.addEventListener("click",(function(e){e.preventDefault(),window.kadence.toggleSubMenu(e.target.parentNode.parentNode.parentNode.parentNode)})),e.tabIndex=0,e.setAttribute("role","button"),e.addEventListener("keypress",(function(e){"Enter"===e.key&&window.kadence.toggleSubMenu(e.target.parentNode.parentNode.parentNode)})),o.addEventListener("mouseleave",(function(e){window.kadence.toggleSubMenu(e.target,!1)})),o.querySelector("a").addEventListener("focus",(function(e){var t=e.target.parentNode.parentNode.querySelectorAll("li.menu-item--toggled-on");for(let o=0;o<t.length;o++)window.kadence.toggleSubMenu(t[o],!1)})),t[n].addEventListener("keydown",(function(e){var o="ul.toggle-show > li > a, ul.toggle-show > li > a .dropdown-nav-toggle";9===e.keyCode&&(e.shiftKey?window.kadence.isfirstFocusableElement(t[n],document.activeElement,o)&&window.kadence.toggleSubMenu(t[n].parentNode,!1):window.kadence.islastFocusableElement(t[n],document.activeElement,o)&&window.kadence.toggleSubMenu(t[n].parentNode,!1))})),t[n].parentNode.classList.add("menu-item--has-toggle"))}},toggleSubMenu:function(e,t){var o=e.querySelector(".dropdown-nav-toggle"),n=e.querySelector("ul");let i=e.classList.contains("menu-item--toggled-on");if(void 0!==t&&"boolean"==typeof t&&(i=!t),o.setAttribute("aria-expanded",(!i).toString()),i){e.classList.remove("menu-item--toggled-on"),n.classList.remove("toggle-show"),o.setAttribute("aria-label",kadenceConfig.screenReader.expand);var r=e.querySelectorAll(".menu-item--toggled-on");for(let e=0;e<r.length;e++)window.kadence.toggleSubMenu(r[e],!1)}else{var l=e.parentNode.querySelectorAll("li.menu-item--toggled-on");for(let e=0;e<l.length;e++)window.kadence.toggleSubMenu(l[e],!1);e.classList.add("menu-item--toggled-on"),n.classList.add("toggle-show"),o.setAttribute("aria-label",kadenceConfig.screenReader.collapse)}},isfirstFocusableElement:function(e,t,o){var n=e.querySelectorAll(o);return 0<n.length&&t===n[0]},islastFocusableElement:function(e,t,o){var n=e.querySelectorAll(o);return 0<n.length&&t===n[n.length-1]},toggleDrawer:function(e,t){t=void 0===t||t;var o=e,n=document.querySelector(o.dataset.toggleTarget),i=document,r=o.dataset.toggleDuration?o.dataset.toggleDuration:250;if(window.kadence.toggleAttribute(o,"aria-expanded","true","false"),n.classList.contains("show-drawer"))o.dataset.toggleBodyClass&&i.body.classList.remove(o.dataset.toggleBodyClass),n.classList.remove("active"),setTimeout((function(){if(n.classList.remove("show-drawer"),o.dataset.setFocus&&t){var e=document.querySelector(o.dataset.setFocus);e&&(e.focus(),e.hasAttribute("aria-expanded")&&window.kadence.toggleAttribute(e,"aria-expanded","true","false"))}}),r);else if(n.classList.add("show-drawer"),o.dataset.toggleBodyClass&&i.body.classList.toggle(o.dataset.toggleBodyClass),setTimeout((function(){if(n.classList.add("active"),o.dataset.setFocus,t){var e=document.querySelector(o.dataset.setFocus);if(e){e.hasAttribute("aria-expanded")&&window.kadence.toggleAttribute(e,"aria-expanded","true","false");var i=e.value;e.value="",e.focus(),e.value=i}}}),10),n.classList.contains("popup-drawer")){var l=n.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'),a=l[0],s=l[l.length-1];document.addEventListener("keydown",(function(e){("Tab"===e.key||9===e.keyCode)&&(e.shiftKey?document.activeElement===a&&(s.focus(),e.preventDefault()):document.activeElement===s&&(a.focus(),e.preventDefault()))}))}},initToggleDrawer:function(){var e=document.querySelectorAll(".drawer-toggle");if(e.length){for(let t=0;t<e.length;t++)e[t].addEventListener("click",(function(o){o.preventDefault(),window.kadence.toggleDrawer(e[t])}));document.addEventListener("keyup",(function(e){27===e.keyCode&&(e.preventDefault(),document.querySelectorAll(".show-drawer.active").forEach((function(e){window.kadence.toggleDrawer(document.querySelector('*[data-toggle-target="'+e.dataset.drawerTargetString+'"]'))})))})),document.addEventListener("click",(function(e){var t=e.target,o=document.querySelector(".show-drawer.active .drawer-overlay");t===o&&window.kadence.toggleDrawer(document.querySelector('*[data-toggle-target="'+o.dataset.drawerTargetString+'"]'))}))}},initMobileToggleSub:function(){document.querySelectorAll(".has-collapse-sub-nav").forEach((function(e){var t=e.querySelector(".current-menu-item");t&&window.kadence.findParents(t,"li").forEach((function(e){var t=e.querySelector(".drawer-sub-toggle");t&&window.kadence.toggleDrawer(t,!0)}))}));var e=document.querySelectorAll(".drawer-sub-toggle");if(e.length)for(let t=0;t<e.length;t++)e[t].addEventListener("click",(function(o){o.preventDefault(),window.kadence.toggleDrawer(e[t])}))},initMobileToggleAnchor:function(){var e=document.getElementById("mobile-menu"),t=document.getElementById("mobile-drawer");if(e){var o=e.querySelectorAll(".menu-item a");if(o.length)for(let e=0;e<o.length;e++)o[e].addEventListener("click",(function(e){window.kadence.toggleDrawer(t.querySelector(".menu-toggle-close"),!1)}))}},initTransHeaderPadding:function(){if(!document.body.classList.contains("no-header")&&document.body.classList.contains("transparent-header")&&document.body.classList.contains("mobile-transparent-header")){var e=document.querySelector(".entry-hero-container-inner"),t=document.querySelector("#masthead"),o=function(o){kadenceConfig.breakPoints.desktop<=window.innerWidth?document.body.classList.contains("transparent-header")?e.style.paddingTop=t.offsetHeight+"px":e.style.paddingTop=0:document.body.classList.contains("mobile-transparent-header")?e.style.paddingTop=t.offsetHeight+"px":e.style.paddingTop=0};e&&(window.addEventListener("resize",o,!1),window.addEventListener("scroll",o,!1),window.addEventListener("load",o,!1),o())}},initStickyHeader:function(){var e=document.querySelector("#main-header .kadence-sticky-header"),t=document.querySelector("#mobile-header .kadence-sticky-header"),o=document.getElementById("wrapper"),n=document.querySelectorAll(".kadence-pro-fixed-above"),i=document.querySelectorAll(".kadence-before-wrapper-item"),r="mobile",l=0,a=0;kadenceConfig.breakPoints.desktop<=window.innerWidth?(r="desktop",e&&(e.style.position="static",a=window.kadence.getOffset(e).top,e.style.position=null)):t&&(t.style.position="static",a=window.kadence.getOffset(t).top,t.style.position=null);var s=function(s){var d,c=window.kadence.getOffset(o).top;if(document.body.classList.toString().includes("boom_bar-static-top")){var u=document.querySelector(".boom_bar");c=window.kadence.getOffset(o).top-u.offsetHeight}if(i.length){var f=0;for(let e=0;e<i.length;e++)f+=i[e].offsetHeight;c=window.kadence.getOffset(o).top-f}if(n.length){var g=0;for(let e=0;e<n.length;e++)g+=n[e].offsetHeight;c=window.kadence.getOffset(o).top+g}if(d=kadenceConfig.breakPoints.desktop<=window.innerWidth?e:t){kadenceConfig.breakPoints.desktop<=window.innerWidth?"mobile"===r&&(a=window.kadence.getOffset(d).top,r="desktop"):"desktop"===r&&(a=window.kadence.getOffset(d).top,r="mobile");var h=d.parentNode,p=d.getAttribute("data-shrink"),w=d.getAttribute("data-reveal-scroll-up"),m=d.getAttribute("data-start-height");if((!m||s&&void 0!==s.type&&"orientationchange"===s.type)&&(d.setAttribute("data-start-height",d.offsetHeight),m=d.offsetHeight,h.classList.contains("site-header-upper-inner-wrap")?(h.style.height=null,s&&void 0!==s.type&&"orientationchange"===s.type?d.classList.contains("item-is-fixed")?setTimeout((function(){h.style.height=Math.floor(h.offsetHeight+d.offsetHeight)+"px"}),21):setTimeout((function(){h.style.height=h.offsetHeight+"px"}),21):h.style.height=h.offsetHeight+"px"):h.classList.contains("site-header-inner-wrap")?(h.style.height=null,h.style.height=h.offsetHeight+"px"):h.style.height=d.offsetHeight+"px"),"true"===p){var v=d.getAttribute("data-shrink-height");if(v){if("true"===w)if(window.scrollY>l)var y=Math.floor(Math.floor(a)-Math.floor(c)+Math.floor(m));else y=Math.floor(a-c);else y=Math.floor(a-c);var b=d.querySelector(".site-main-header-inner-wrap"),k=b.querySelector(".custom-logo"),L=b.querySelector(".kadence-sticky-logo"),S=b.getAttribute("data-start-height");if(S||(b.setAttribute("data-start-height",b.offsetHeight),S=b.offsetHeight),window.scrollY<=y)b.style.height=S+"px",b.style.minHeight=S+"px",b.style.maxHeight=S+"px",k&&(k.style.maxHeight="100%"),L&&(L.style.maxHeight="100%");else if(window.scrollY>y){var x=Math.max(v,S-(window.scrollY-(a-c)));b.style.height=x+"px",b.style.minHeight=x+"px",b.style.maxHeight=x+"px",k&&(k.style.maxHeight=x+"px"),L&&(L.style.maxHeight=x+"px")}}}if("true"===w){var E=Math.floor(a-c),T=window.scrollY,A=d.offsetHeight,q=l-T,M=window.getComputedStyle(d).getPropertyValue("transform").match(/(-?[0-9\.]+)/g);if(M&&void 0!==M[5]&&M[5])var H=parseInt(M[5])+q;else H=0;var O=T>l;if(T<=E)d.style.transform="translateY(0px)";else if(O)d.classList.add("item-hidden-above"),d.style.transform="translateY("+(Math.abs(H)>A?-A:H)+"px)";else{E=Math.floor(a-c);d.style.transform="translateY("+(H>0?0:H)+"px)",d.classList.remove("item-hidden-above")}l=T}else E=Math.floor(a-c);window.scrollY==E?(d.style.top=c+"px",d.classList.add("item-is-fixed"),d.classList.add("item-at-start"),d.classList.remove("item-is-stuck"),h.classList.add("child-is-fixed"),document.body.classList.add("header-is-fixed")):window.scrollY>E?(d.style.top=c+"px",d.classList.add("item-is-fixed"),d.classList.add("item-is-stuck"),d.classList.remove("item-at-start"),h.classList.add("child-is-fixed"),document.body.classList.add("header-is-fixed")):d.classList.contains("item-is-fixed")&&(d.classList.remove("item-is-fixed"),d.classList.remove("item-at-start"),d.classList.remove("item-is-stuck"),d.style.height=null,d.style.top=null,h.classList.remove("child-is-fixed"),document.body.classList.remove("header-is-fixed"))}};(e||t)&&(window.addEventListener("resize",s,!1),window.addEventListener("scroll",s,!1),window.addEventListener("load",s,!1),window.addEventListener("orientationchange",s),s())},getTopOffset:function(){var e=document.querySelector("#main-header .kadence-sticky-header"),t=document.querySelector("#mobile-header .kadence-sticky-header"),o="mobile",n=0,i=0;if(kadenceConfig.breakPoints.desktop<=window.innerWidth){if("mobile"===o){if(e)n="true"!==e.getAttribute("data-shrink")||e.classList.contains("site-header-inner-wrap")?Math.floor(e.offsetHeight):Math.floor(e.getAttribute("data-shrink-height"));else n=0;document.body.classList.contains("admin-bar")&&(i=32),o="desktop"}}else if("desktop"===o){if(t)n="true"===t.getAttribute("data-shrink")?Math.floor(t.getAttribute("data-shrink-height")):Math.floor(t.offsetHeight);else n=0;i=0,o="mobile"}return Math.floor(n+i)},scrollToElement:function(e,t){t=void 0===t||t;var o=window.kadence.getTopOffset(),n=Math.floor(e.getBoundingClientRect().top)-o;window.scrollBy({top:n,left:0,behavior:"smooth"});var i=setInterval((function(){var n=window.innerHeight+window.pageYOffset>=document.body.offsetHeight-2;(Math.floor(e.getBoundingClientRect().top)-o==0||n)&&(e.focus(),e.classList.contains("kt-title-item")&&e.firstElementChild.click(),t&&window.history.pushState("","","#"+e.id),clearInterval(i))}),100)},anchorScrollToCheck:function(e,t){if(t=void 0!==t?t:null,e.target.getAttribute("href"))var o=e.target;else{if(!(o=e.target.closest("a")))return;if(!o.getAttribute("href"))return}if(!o.parentNode||!o.parentNode.hasAttribute("role")||"tab"!==o.parentNode.getAttribute("role")){var n;n=t?t.getAttribute("href").substring(t.getAttribute("href").indexOf("#")):o.getAttribute("href").substring(o.getAttribute("href").indexOf("#"));var i=document.getElementById(n.replace("#",""));i&&(e.preventDefault(),window.kadence.scrollToElement(i))}},initStickySidebar:function(){if(document.body.classList.contains("has-sticky-sidebar")){var e=window.kadence.getTopOffset(),t=document.querySelector("#secondary .sidebar-inner-wrap");t&&(t.style.top=Math.floor(e+20)+"px",t.style.maxHeight="calc( 100vh - "+Math.floor(e+20)+"px )")}},initAnchorScrollTo:function(){if(!document.body.classList.contains("no-anchor-scroll")){if(""!=window.location.hash){var e,t=location.hash.substring(1);if(!/^[A-z0-9_-]+$/.test(t))return;(e=document.getElementById(t))&&window.setTimeout((function(){window.kadence.scrollToElement(e,!1)}),100)}var o=document.querySelectorAll("a[href*=\\#]:not([href=\\#]):not(.scroll-ignore):not([data-tab]):not([data-toggle])");o.length&&o.forEach((function(e){e.addEventListener("click",(function(e){window.kadence.anchorScrollToCheck(e)}))}))}},initScrollToTop:function(){var e=document.getElementById("kt-scroll-up");if(e){var t=function(){window.scrollY>100?e.classList.add("scroll-visible"):e.classList.remove("scroll-visible")};window.addEventListener("scroll",t),t(),e.addEventListener("click",(function(e){e.preventDefault(),window.scrollTo({top:0,behavior:"smooth"})}))}},init:function(){window.kadence.initNavToggleSubmenus(),window.kadence.initToggleDrawer(),window.kadence.initMobileToggleAnchor(),window.kadence.initMobileToggleSub(),window.kadence.initOutlineToggle(),window.kadence.initStickyHeader(),window.kadence.initStickySidebar(),window.kadence.initTransHeaderPadding(),window.kadence.initAnchorScrollTo(),window.kadence.initScrollToTop()}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",window.kadence.init):window.kadence.init()}();
/*! EnlighterJS Syntax Highlighter 3.4.0 | Mozilla Public License 2.0 | https://enlighterjs.org */
var EnlighterJS=function(e){"use strict";var c={indent:4,ampersandCleanup:!0,linehover:!0,rawcodeDbclick:!1,textOverflow:"break",collapse:!1,retainCssClasses:!1,cssClasses:"",toolbarOuter:"{BTN_TABS}",toolbarTop:"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}",toolbarBottom:"{BTN_COLLAPSE}",linenumbers:!0,lineoffset:0,highlight:"",layout:"standard",language:"generic",theme:"enlighter",title:""};function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function i(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}function g(e,t,r){return(g=l()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var i=new(Function.bind.apply(e,n));return r&&o(i,r.prototype),i}).apply(null,arguments)}function u(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function p(r){var n=l();return function(){var e,t=s(r);return u(this,n?(e=s(this).constructor,Reflect.construct(t,arguments,e)):t.apply(this,arguments))}}function y(e,t,r){return(y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var i=Object.getOwnPropertyDescriptor(n,t);return i.get?i.get.call(r):i.value}})(e,t,r||e)}function f(e){return function(e){if(Array.isArray(e))return d(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||b(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,t){if(e){if("string"==typeof e)return d(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?d(e,t):void 0}}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var h={sqStrings:{regex:/('(?:[^'\\]|\\.)*')/g,type:"s0"},dqStrings:{regex:/"(?:[^"\\]|\\.)*"/g,type:"s0"},bqStrings:{regex:/`(?:[^`\\]|\\.)*`/g,type:"s0"},char:{regex:/('(\\.|.|\\\w+)')/g,type:"s1"},slashComments:{regex:/(?:^|[^\\])\/\/.*$/gm,type:"c0"},poundComments:{regex:/(?:^|[^\\])#.*$/gm,type:"c0"},blockComments:{regex:/\/\*[\s\S]*?\*\//g,type:"c1"},docComments:{regex:/\/\*\*[\s\S]*?\*\//g,type:"c2"},heredoc:{regex:/(<<[<-]?\s*?(['"]?)([A-Z0-9_]+)\2\s*\n[\s\S]*?\n\3)/gi,type:"s5"},brackets:{regex:/[[\](){}<>]+/g,type:"g1"},floats:{regex:/[\b\W](-?((?:\d+\.\d+|\.\d+|\d+\.)(?:e[+-]?\d+)?)|\d+(?:e[+-]?\d+))/gi,type:"n0"},complex:{regex:/[\b\W](?:-?(?:(?:\d+\.\d+|\.\d+|\d+\.|\d+)(?:e[+-]?\d+)?)|\d+(?:e[+-]?\d+))[ij]/gi,type:"n5"},int:{regex:/[\b\W](-?\d+)(?!\.)\b/g,type:"n1"},hex:{regex:/[\b\W](-?0x[A-F0-9]+)\b/gi,type:"n2"},bin:{regex:/[\b\W](-?0b[01]+)\b/gi,type:"n3"},octal:{regex:/[\b\W](-?0[0-7]+)(?!\.)\b/g,type:"n4"},prop:{regex:/[\w\])]\.(\w+)\b/g,type:"m3"},fCalls:{regex:/\b([\w]+)\s*\(/gm,type:"m0"},mCalls:{regex:/\.([\w]+)\s*\(/gm,type:"m1"},boolean:{regex:/\b(true|false)\b/gi,type:"e0"},null:{regex:/\b(null)\b/gi,type:"e1"}};function C(e,t,r,n,i){return{text:e,type:t,index:n||0,end:e.length+n,filter:r||null,priority:i||0}}function m(e,t,r){for(var n=2<arguments.length&&void 0!==r?r:"text",i=[],a=0,s=0;s<t.length;s++){var o=t[s];if(!o||!o.type||!o.regex)return;for(var l=void 0;null!=(l=o.regex.exec(e));){if(5e4<++a)throw new Error("Infinite tokenizer loop detected; more than 50k tokens - language rule ["+s+"] "+o.regex+" seems to be broken");if(0!=l[0].length){o.regex.lastIndex=l.index+1+l[0].length/3;var g=Array.isArray(o.type)?o.type[0]:o.type,u=(Array.isArray(o.filter)?o.filter[0]:o.filter)||null;if(1<l.length)for(var p,c,y,f=0,b=1;b<l.length;b++){l[b]&&(p=Array.isArray(o.type)&&o.type.length>=b?o.type[b-1]:g,c=Array.isArray(o.filter)&&o.filter.length>=b?o.filter[b-1]:u,f=y=l[0].indexOf(l[b],f),i.push(C(l[b],p,c,l.index+y,s)))}else i.push(C(l[0],g,u,l.index,s))}}}i=i.sort(function(e,t){return e.index==t.index?e.priority<t.priority?-1:1:e.index<t.index?-1:1});for(var d=[],h=0,m=0;m<i.length;m++){if(h<i[m].index&&d.push(C(e.substring(h,i[m].index),n,null,h)),i[m].filter)for(var x=i[m].filter(i[m])||[],k=0;k<x.length;k++)d.push(x[k]);else d.push(i[m]);h=i[m].end;for(var v=!1,w=m+1;w<i.length;w++)if(i[w].index>=h){m=w-1,v=!0;break}if(!1===v)break}return h<e.length&&d.push(C(e.substring(h),n,null,h)),d}var x=function(){function e(){r(this,e),this.rules=[],this.setupLanguage()}return i(e,[{key:"setupLanguage",value:function(){this.rules=[h.sqStrings,h.dqStrings,h.prop,h.slashComments,h.poundComments,h.blockComments,h.brackets,{regex:/\W(true|false|null|nil|if|then|else|for|while|do|class|implements|extends|function|end|void|return|in|of|new|this|try|catch|def|except)\W/gi,type:"k1"},h.mCalls,h.fCalls,h.octal,h.bin,h.hex,h.floats,h.int,{regex:/[\b\s]([$&|~*:;]+)[\b\s]/g,type:"g0"}]}},{key:"analyze",value:function(e){return m(e,this.rules)}}]),e}(),t=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.sqStrings,{regex:/\|.*?\|/g,type:"s2"},{regex:/(".*)$/gm,type:"c0"},{regex:/^\s*(\*.*)$/gm,type:"c0"},{regex:/(data):?\s*(\w+)\s*/gi,type:["k2","k7"]},{regex:/(type)\s+(\w+)\s*/gi,type:["k2","k5"]},{regex:/\b(abap_true|abap_false)\b/gi,type:"e0"},{regex:/\b(abap_undefined)\b/gi,type:"e1"},{regex:/\b[A-Z_][A-Za-z0-9_]*\b/g,type:"k0"},h.fCalls,h.int,h.brackets]}}]),t}();function k(e,t,r){for(var n,i=[],a=0;null!=(n=t.exec(e.text));){a<n.index&&i.push(C(e.text.substring(a,n.index),e.type,null,a));for(var s=r(n,e.type)||[],o=0;o<s.length;o++)i.push(s[o]);a=n.index+n[0].length,t.lastIndex=a}return 0==i.length?[e]:(a<e.text.length&&i.push(C(e.text.substring(a),e.type,null,a)),i)}var v=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.poundComments,{regex:/(<)([A-Z:_][A-Z0-9:.-]*)([\s\S]*?)(\/?>)/gi,type:["g1","x1","text","g1"],filter:[null,null,function(e){return k(e,h.dqStrings.regex,function(e){return[C(e[0],"s0")]})},null]},{regex:/(<\/)([A-Z:_][A-Z0-9:.-]*\s*)(>)/gi,type:["g1","x1","g1"]},{regex:/^\s*([A-Z]\w+)\b/gm,type:"k0"},{regex:/%\{\w+\}/g,type:"k7"},{regex:/\b(on|off)\b/gi,type:"e0"},h.int]}}],[{key:"alias",value:function(){return["apacheconf","httpd"]}}]),t}(),w=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/(;.*)$/gm,type:"co0"},{regex:/(\$.*)$/gm,type:"k4"},h.sqStrings,h.dqStrings,{regex:/(^|:)\s*?(\w+)\s+/gm,type:"k0"},{regex:/^\s*?([A-Z?_][A-Z0-9?_]+:)\s*?/gim,type:"k6"},{regex:/@\w+/gi,type:"k9"},{regex:/#\w+/gi,type:"k9"},{regex:/[A-F0-9][A-F0-9$]+?H/gi,type:"n2"},{regex:/\d[\d$]+?D/gi,type:"n1"},{regex:/[01][01$]+?B/gi,type:"n3"},{regex:/[0-7][0-7$]+?(?:Q|O)/gi,type:"nu4"},{regex:/(0x[A-F0-9]+|\$[A-F0-9]+)/gi,type:"n2"},{regex:/(0b[01]+)/g,type:"n3"},{regex:/\b(\d+)/g,type:"n1"},h.fCalls]}}],[{key:"alias",value:function(){return["asm"]}}]),t}(),S=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/(;.*)$/gm,type:"co0"},h.sqStrings,h.dqStrings,{regex:/^\s*?\.\w+\s+/gm,type:"kw4"},{regex:/\b(r\d{1,2})/gi,type:"kw0"},{regex:/(@[0-9])/gi,type:"k2"},{regex:/^\s*?(\w+:)\s*?/gm,type:"kw6"},{regex:/(^|:)\s*?(\w+)\s+/gm,type:"kw0"},{regex:/(0x[A-F0-9]+|\$[A-F0-9]+)/gi,type:"nu2"},h.bin,h.int,h.fCalls,{regex:/\b[A-Z]{2,}[0-9]?[0-9]?\b/g,type:"kw9"}]}}],[{key:"alias",value:function(){return["avrasm"]}}]),t}(),_=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.char,{regex:/@[\W\w_][\w]+/gm,type:"k11"},h.boolean,h.null,h.prop,{regex:/#.*$/gm,type:"k4"},{regex:/\b(break|case|catch|continue|do|else|for|if|goto|switch|try|throw|while)\b/g,type:"k1"},{regex:/\b(__[A-Z][A-Z0-9_]+__|__cplusplus)\b/g,type:"e3"},{regex:/\b(\w+\d+?_t)\b/g,type:"k5"},{regex:/\b(bool|char|double|float|int|long|short|void)\b/g,type:"k5"},{regex:/\b(enum|struct|typedef|union)\b/g,type:"k2"},{regex:/\b(const|volatile|unsigned|signed|restrict)\b/g,type:"k8"},{regex:/\b(asm|auto|class|auto|default|explicit|export|extern|friend|inline|thread_local|static_assert|nullptr|noexcept|friend|decltype|constexpr|alignof|alignas|virtual|using|typename|typeid|this|template|static|return|register|public|protected|private|operator|namespace|mutable|inline)\b/g,type:"k0"},{regex:/\b(new|delete|cast|const_cast|dynamic_cast|static_cast|reinterpret_cast|sizeof|and|bitand|and_eq|not|not_eq|or|bitor|or_eq|xor|xor_eq|compl)\b/g,type:"k3"},h.mCalls,h.fCalls,h.slashComments,h.blockComments,h.octal,h.bin,h.hex,h.floats,h.brackets]}}],[{key:"alias",value:function(){return["c++","c"]}}]),t}(),E=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/\$("(?:[^"\\]|\\.)*")/g,type:"s0",filter:function(e){return k(e,/\{.*?}/g,function(e){return[C(e[0],"s3")]})}},h.dqStrings,h.char,h.null,h.boolean,h.prop,{regex:/\b(bool|byte|char|decimal|double|float|int|long|sbyte|short|uint|ulong|ushort|void)\b/g,type:"k5"},{regex:/\b(while|try|throw|switch|if|goto|foreach|for|finally|else|do|continue|catch|case|break)\b/g,type:"k1"},{regex:/^((?:using|namespace)\s+)(\w[\w._]+[;{\n])/gm,type:["k0","k10"]},{regex:/\b(enum|struct|var)\b/g,type:"k2"},{regex:/\b(const|in|out)\b/g,type:"k8"},{regex:/\b(using|volatile|virtual|using|unsafe|unchecked|static|stackalloc|sealed|return|ref|readonly|public|protected|private|params|override|operator|object|namespace|lock|is|internal|interface|implicit|fixed|extern|explicit|event|delegate|default|class|checked|base|as|abstract)\b/g,type:"k0"},{regex:/\b(add|alias|ascending|async|await|by|descending|dynamic|equals|from|get|global|group|into|join|let|nameof|on|orderby|partial|remove|select|set|unmanaged|value|var|when|where|yield)\b/g,type:"k0"},{regex:/\b(this)\b/g,type:"k9"},{regex:/\b(new|sizeof|typeof)\b/g,type:"k3"},h.fCalls,h.mCalls,h.slashComments,h.blockComments,h.docComments,h.int,h.floats,h.bin,h.hex,h.octal,h.brackets]}}],[{key:"alias",value:function(){return["c#"]}}]),t}(),A={pseudoElements:{regex:/[\w\])](::?[\w-]+)\b/g,type:"x15"},idSelector:{regex:/(#[\w-]+)/g,type:"x10"},classSelector:{regex:/(\.[\w-]+)/g,type:"x11"},elementSelector:{regex:/\b([\w-]+)/g,type:"x16"}},L=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){var t=[A.pseudoElements,A.idSelector,A.classSelector,A.elementSelector,h.dqStrings,h.sqStrings];this.rules=[{regex:/(?:^|}|\*\/|;|{)\s*([^{};/]+?)\s*{/g,type:"text",filter:function(e){return m(e.text,t)}},h.dqStrings,h.sqStrings,{regex:/\W@(charset|import|namespace|page|font-face|keyframes|viewport|document|supports)\b/gi,type:"k4"},{regex:/(url\s*)(\(.*?\))/gi,type:["m0","s0"]},{regex:/(#[a-z0-9]+)\W/gi,type:"x14"},{regex:/(-?\.?\d+[.\d]*(%|[a-z]{2,4})?)/gim,type:"x13"},{regex:/([\w-]+)\s*:/g,type:"x12"},h.blockComments,h.brackets]}}],[{key:"alias",value:function(){return["styles"]}}]),t}(),q=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/^("""[\s\S]*?"""|'''[\s\S]*?''')/gm,type:"c9"},{regex:/("""[\s\S]*?"""|'''[\s\S]*?''')/g,type:"s5"},h.dqStrings,h.sqStrings,{regex:/\b(__[a-z]+__)\b/g,type:"e3"},{regex:/[^;]\s*(from\s+)([\w.]+)(\s+import)/gi,type:["k0","k10","k0"]},{regex:/\b(raise|while|try|if|for|finally|else|elif|continue|break)\b/g,type:"k1"},{regex:/\b(yield|with|return|pass|lambda|is|in|import|global|from|except|def|class|assert|as|async|await)\b/g,type:"k0"},{regex:/\b(and|or|not|del)\b/g,type:"k3"},{regex:/\b(True|False)\b/g,type:"e0"},{regex:/\b(None)\b/g,type:"e1"},h.mCalls,h.fCalls,h.poundComments,h.int,h.hex,h.floats,h.octal,h.brackets]}}],[{key:"alias",value:function(){return["py"]}}]),t}(),I=function(){a(t,q);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){y(s(t.prototype),"setupLanguage",this).call(this);this.rules=[{regex:/\b(bool|char|double|float|int|long|short|void)\b/g,type:"k5"},{regex:/\b(enum|struct|typedef|union|object)\b/g,type:"k2"},{regex:/\b(const|volatile|unsigned|signed|restrict)\b/g,type:"k8"},{regex:/\b(readonly|extern|namespace|public|privat|include|cimport|pyximport|cythonize|cdef|cpdef|ctypedef|property|IF|ELIF|ELSE|DEF)\b/g,type:"k0"}].concat(this.rules)}}]),t}(),W=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.poundComments,h.brackets,{regex:/\[(\w+)\]/gm,type:"k9"},{regex:/\{([\w_-]+)\s*(?::\s*(.*?))?}/gm,type:["k7","s0"]}]}}]),t}(),N=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/^([+-]{3}.*)$/gm,type:"c0"},{regex:/^(@@.*@@\s*)/gm,type:"t2"},{regex:/^(\+.*)/gm,type:"t5"},{regex:/^(-.*)/gm,type:"t6"}]}}]),t}(),D=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,{regex:/\$\{\w+\}/gi,type:"k7"},{regex:/ARG\s+(\w+)(?:(=)(.*?)$)?/gim,type:["k7","k3","s0"]},{regex:/ENV\s+(\w+)(?:(\s+|=)(.*?)$)?/gim,type:["k7","k3","s0"]},{regex:/(?:^|[^\\])#\s*\w+=.*$/gm,type:"k4"},h.poundComments,{regex:/^([a-z]+)\b/gim,type:"k0"},{regex:/\b(AS)\b/gi,type:"k0"},{regex:/^\s+(&&)/gim,type:"k3"},h.brackets]}}],[{key:"alias",value:function(){return["docker"]}}]),t}(),$=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.bqStrings,h.char,h.boolean,{regex:/\b(nil)\b/gi,type:"e1"},h.prop,{regex:/\b(var)\b/g,type:"k2"},{regex:/\b(case|break|default|else|goto|switch|if|continue|for)\b/g,type:"k1"},{regex:/\b(func|interface|select|defer|go|map|chan|package|fallthrough|range|import|return)\b/g,type:"k0"},{regex:/\b(iota)\b/g,type:"k9"},{regex:/\b(bool|string|u?int(8|16|32|64)?|uintptr|byte|rune|float32|float64|complex64|complex128)\b/g,type:"k5"},{regex:/\b(struct|type)\b/g,type:"k2"},{regex:/\b(const)\b/g,type:"k8"},h.mCalls,h.fCalls,h.slashComments,h.octal,h.int,h.complex,h.floats,h.hex,h.brackets]}}],[{key:"alias",value:function(){return["golang"]}}]),t}(),O=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/("""[\s\S]*?"""|'''[\s\S]*?''')/g,type:"s5"},h.dqStrings,h.sqStrings,h.char,h.slashComments,h.blockComments,h.docComments,{regex:/(\/(?:[^/\\]|\\.)*\/)/g,type:"s5"},h.prop,{regex:/\b(byte|char|short|int|long|float|double|String)\b/g,type:"k5"},{regex:/\b(break|case|catch|continue|default|do|else|finally|for|goto|if|switch|throw|try|while)\b/g,type:"k1"},{regex:/^(package|import)(\s+[\w.]+)/gm,type:["k0","k10"]},{regex:/\b(const|enum|def)\b/g,type:"k2"},{regex:/\b(as|assert|class|extends|goto|implements|in|interface|return|thows|trait)\b/g,type:"k0"},{regex:/\b(this|super)\b/g,type:"k9"},{regex:/\b(instanceof|new)\b/g,type:"k3"},h.fCalls,h.mCalls,h.null,h.boolean,{regex:/^#.*/g,type:"k9"},{regex:/[\b\W](-?0[0-7][0-7_]+[GLIDF]?)\b/gi,type:"n4"},{regex:/[\b\W](-?\d[\d_]*[GLIDF]?)(?!\.)\b/gi,type:"n1"},{regex:/[\b\W](-?0x[A-F0-9][A-F0-9_]+[GLIDF]?)\b/gi,type:"n2"},{regex:/[\b\W](-?0b[01][01_]+[GLIDF]?)\b/gi,type:"n3"},{regex:/(-?((?:\d+\.\d+|\.\d+|\d+\.)(?:e[+-]?\d+)?)|\d+(?:e[+-]?\d+)?)/gi,type:"n0"},h.brackets]}}]),t}(),T=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,{regex:/(;.*)$/gm,type:"c0"},h.poundComments,{regex:/^\s*?(\[.*])\s*?$/gm,type:"t2"},{regex:/^(\s*?[a-z0-9._-]+\s*?)(=)/gim,type:["k2","k3"]},{regex:/\b(true|false|on|off|yes|no)\b/gim,type:"e0"},h.octal,h.bin,h.hex,h.floats,h.brackets]}}],[{key:"alias",value:function(){return["conf","cnf"]}}]),t}(),R=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.char,{regex:/@[\W\w_][\w]+/gm,type:"k11"},h.prop,{regex:/\b(boolean|byte|char|short|int|long|float|double|String|void|Integer|Double|BigInt|Float|Boolean|Byte|Char|Long)\b/g,type:"k5"},{regex:/\b(while|try|catch|case|else|throw|break|if|do|goto|switch|for|continue)\b/g,type:"k1"},{regex:/^(package|import)(\s+[\w.]+)/gm,type:["k0","k10"]},{regex:/\b(enum)\b/g,type:"k2"},{regex:/\b(const)\b/g,type:"k8"},{regex:/\b(native|volatile|strictfp|finally|class|static|interface|final|extends|transient|return|throws|public|protected|implements|private|synchronized|default|assert|abstract)\b/g,type:"k0"},{regex:/\b(this|super)\b/g,type:"k9"},{regex:/\b(instanceof|new)\b/g,type:"k3"},h.fCalls,h.mCalls,h.null,h.boolean,h.slashComments,h.blockComments,h.docComments,h.int,h.floats,h.bin,h.hex,h.octal,h.brackets]}}]),t}(),F=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){function e(e){return k(e,/\\(x[A-F0-9]{2}|u[A-F0-9]{4}|.)/gi,function(e){return[C(e[0],"s4")]})}this.rules=[{regex:h.sqStrings.regex,type:"s0",filter:e},{regex:h.dqStrings.regex,type:"s0",filter:e},{regex:/`(?:[^`\\]|\\.)*`/g,type:"s2",filter:function(e){return k(e,/\$\{.*?}/g,function(e){return[C(e[0],"s3")]})}},h.boolean,h.null,h.prop,{regex:/\b(var|let|enum|const)\b/g,type:"k2"},{regex:/\b(document|window|console)\b/g,type:"k9"},{regex:/\b(break|case|catch|continue|do|else|finally|for|if|switch|try|while|throw)\b/g,type:"k1"},{regex:/\b(as|async|class|constructor|debugger|default|export|extends|function|import|return|with|yield|implements|package|protected|static|interface|private|public|await|module)\b/g,type:"k0"},{regex:/\b(this|super)\b/g,type:"k9"},{regex:/\b(instanceof|new|delete|typeof|void|in)\b/g,type:"k3"},{regex:/\W(=>)\W/g,type:"k3"},h.slashComments,h.blockComments,{regex:/\W(\/(?:[^/\\]|\\.)*\/\w*)/g,type:"e2"},h.mCalls,h.fCalls,{regex:/\{|}|\(|\)|\[|]/g,type:"g1"},{regex:/[\b\W](-?0o[0-7]+)(?!\.)\b/g,type:"n4"},h.bin,h.hex,h.floats,h.int]}}],[{key:"alias",value:function(){return["js"]}}]),t}(),j=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/"(?:[^"\\]|\\.)*"\s*:/g,type:"k2"},h.dqStrings,h.boolean,h.null,{regex:/\{|}|\(|\)|\[|]/g,type:"g1"},h.int,h.floats,{regex:/,|:/g,type:"g0"}]}}]),t}(),z=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){function e(e){return k(e,/\$(?:\{.*?}|\w+)/g,function(e){return[C(e[0],"s3")]})}this.rules=[{regex:/"""[\s\S]*?"""/g,type:"s5",filter:e},{regex:h.dqStrings.regex,type:"s0",filter:e},h.char,h.prop,{regex:/\b(Double|Float|Long|Int|Short|Byte|Any|String|Array)\b/g,type:"k5"},{regex:/\b(break|continue|do|else|for|if|throw|try|when|while|catch|finally)\b/g,type:"k1"},{regex:/^(package|import)(\s+[\w.]+)/gm,type:["k0","k10"]},{regex:/\b(enum|typealias|object|companion|val|var)\b/g,type:"k2"},{regex:/\b(actual|abstract|annotation|companion|crossinline|data|expect|external|final|infix|inline|inner|internal|lateinit|noinline|open|operator|out|override|private|protected|public|reified|sealed|suspend|tailrec|vararg)\b/g,type:"k8"},{regex:/\b(as|class|fun|in|interface|is|return|by|constructor|delegate|dynamic|field|file|get|init|param|property|receiver|set|setparam|where|field|it)\b/g,type:"k0"},{regex:/\b(this|super)\b/g,type:"k9"},{regex:/\b(instanceof|new)\b/g,type:"k3"},{regex:/(@\w+|\w+@)/gm,type:"k6"},h.fCalls,h.mCalls,h.null,h.boolean,h.slashComments,h.blockComments,{regex:/[\b\W](-?\d[\d_]*L?)(?!\.)\b/g,type:"n1"},h.floats,{regex:/[\b\W](-?0x[A-F0-9][A-F0-9_]+)\b/gi,type:"n2"},{regex:/[\b\W](-?0b[01][01_]+)\b/gi,type:"n3"},h.brackets]}}]),t}(),B=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/(?:^|[^\\])%.*$/gm,type:"c0"},{regex:/[^\\](\\\w+)(?:[\W\s])/gm,type:"k0"},{regex:/[$()]/g,type:["s3"]},h.int,h.floats,h.brackets]}}],[{key:"alias",value:function(){return["tex"]}}]),t}(),Z=function(){a(t,L);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){y(s(t.prototype),"setupLanguage",this).call(this),this.rules.shift();var e=[h.slashComments,A.pseudoElements,A.idSelector,A.classSelector,{regex:/\b([\w][\w-]+)\s*\(/gm,type:"m0"},{regex:/@[\w-]+\b/g,type:"k7"},{regex:/&/gi,type:"k3"}];this.rules=this.rules.concat(e)}}]),t}(),M=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.poundComments,{regex:/[\w\])]\.([\w-]+)\b/g,type:"m3"},{regex:/\b(else)\b/g,type:"k1"},{regex:/\s\$[A-Z_]+/g,type:"k7"},{regex:/(==|!=|=~|!~)/g,type:"k3"},{regex:/\b(\w[\w-]+)\.\w/g,type:"k9"},h.int,h.brackets]}}],[{key:"alias",value:function(){return[]}}]),t}(),P=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/---\[\[[\s\S]*?(]])/g,type:"c1"},{regex:/--\[\[[\s\S]*?]]/g,type:"c1"},{regex:/(--.*)$/gm,type:"c0"},h.dqStrings,h.sqStrings,{regex:/(\[(=*)\[[\S\s]*?]\2])/g,type:"s5"},{regex:/\b(true|false)\b/gi,type:"e0"},{regex:/\b(nil)\b/gi,type:"e1"},{regex:/\b(local)\b/g,type:"k2"},{regex:/\b(break|do|else|elseif|end|for|if|repeat|then|until|while)\b/g,type:"k1"},{regex:/\b(function|return|and|in|or|not)\b/g,type:"k0"},h.brackets,h.floats,h.mCalls,h.fCalls]}}]),t}(),U=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/[\r|\n](```[a-z_-]*[\r|\n][\S\s]+?```)/gi,type:"t8"},{regex:/^\s*#{1,6}.+$/gm,type:"t1"},{regex:/(.+[\r|\n][=-]{3,})[\r|\n]/g,type:"t1"},{regex:/`.+?`/g,type:"t8"},{regex:/^(?:\*|_|-){3,}$/gm,type:"t2"},{regex:/\W(\*\*|\*|~~|~|__|_)(.*?\1)\W/gm,type:"t4"},{regex:/!?\[.*?]\(.*?\)/g,type:"t3"}]}}],[{key:"alias",value:function(){return["md","gfm"]}}]),t}(),G=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/%.*$/gm,type:"c0"},{regex:/%%.*$/gm,type:"c1"},h.sqStrings,h.dqStrings,h.boolean,h.mCalls,h.prop,{regex:/\b(break|case|catch|continue|do|else|elseif|end|end_try_catch|endfor|endif|endmethods|endparfor|endproperties|endswitch|endwhile|for|if|switch|try|until|while)\b/gi,type:"k1"},{regex:/\b(__FILE__|__LINE__|classdef|end_unwind_protect|endclassdef|endenumeration|endevents|endfunctionenumeration|events|function|global|methods|otherwise|parfor|persistent|properties|return|static|unwind_protect|unwind_protect_cleanup)\b/gi,type:"k0"},{regex:/(@[\w]+)\s*/gm,type:"k7"},h.fCalls,h.floats,h.brackets]}}]),t}(),H=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.sqStrings,h.poundComments,{regex:/([a-z]+)\s*\{/g,type:"k9"},{regex:/^\s*([a-z]\w+)\s/gm,type:"k0"},{regex:/\W([a-z]+:\/\/.*?);/g,type:"k9"},{regex:/\b(\d+\.\d+\.\d+\.\d+(?::\d+))\b/g,type:"k9"},{regex:/(?:\W)\$[a-z_]+/g,type:"k7"},{regex:/[\b\W](\d+[kmgdyw])\b/g,type:"n0"},h.int,h.brackets]}}],[{key:"alias",value:function(){return[]}}]),t}(),V=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.sqStrings,h.bqStrings,{regex:/^\s*(Var(\s+\\GLOBAL)?)(\s+\w+)\b/g,type:["k2","k7"]},{regex:/\W(\$\{\w+})\W/g,type:"k9"},{regex:/\W(\$\w+)\b/g,type:"k7"},{regex:/^\s*([A-Z]\w+)\s+/gm,type:"k0"},{regex:/\b[A-Z][A-Z_]*[A-Z]\b/g,type:"e3"},{regex:/^\s*(!\w+)\s+/gm,type:"k4"},{regex:/^\s*(\w+:)\s*$/gim,type:"k6"},{regex:/\b(admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\b/gi,type:"k9"},h.blockComments,{regex:/[#;].*?$/gm,type:"c0"},h.int,h.hex,h.octal,h.brackets]}}]),t}(),J=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.sqStrings,h.dqStrings,h.heredoc,h.boolean,h.null,{regex:/(self|parent|\$this)/gi,type:"k9"},{regex:/\b(as|break|case|catch|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|finally|for|foreach|goto|if|switch|throw|try|while)\b/g,type:"k1"},{regex:/\b__[A-Z][A-Z0-9_]+__\b/g,type:"e3"},{regex:/\b(__halt_compiler|abstract|array|callable|class|const|continue|declare|default|die|echo|empty|eval|exit|extends|final|function|global|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|print|private|protected|public|require|require_once|return|static|trait|use|var|yield)\b/g,type:"k0"},{regex:/\b(and|or|xor|clone|new|unset)\b/g,type:"k3"},{regex:/\b(int|float|bool|string|resource|object|mixed|numeric)\b/g,type:"k5"},h.slashComments,h.poundComments,h.blockComments,{regex:/\$[^\s=;()]+/gim,type:"k7"},{regex:/\b([^\s(]+)\s*\(/gm,type:"m0"},{regex:/->([\w]+)/gim,type:"m1"},{regex:/::([\w]+)/gim,type:"m2"},h.octal,h.bin,h.hex,h.floats,h.brackets]}}]),t}(),X=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){function e(e){return k(e,/\$(?:\w+|\(.*?\))/g,function(e){return[C(e[0],"k7")]})}this.rules=[{regex:/"(?:[^"`]|`.)*"/g,type:"s2",filter:e},h.sqStrings,{regex:/@"[\S\s]*?\n\s*"@/g,type:"s5",filter:e},{regex:/@'[\S\s]*?\n\s*'@/g,type:"s5"},{regex:/\b(Begin|Break|Catch|Continue|Else|Elseif|End|Finally|For|ForEach|If|Switch|Throw|Try|Until|While)\b/gi,type:"k1"},{regex:/\b(Data|Do|DynamicParam|Exit|Filter|From|Function|In|InlineScript|Hidden|Parallel|Param|Process|Return|Sequence|Trap|Workflow)\b/gi,type:"k0"},{regex:/\b([A-Z]\w+(?:-\w+)+)\b/gi,type:"m0"},{regex:/<#[\S\s]+?#>/gi,type:"c1"},h.poundComments,{regex:/\$[A-Z_][\w]*/gim,type:"k7"},h.mCalls,h.fCalls,h.int,h.floats,h.brackets]}}]),t}(),Y=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/(%.*)$/gm,type:"c0"},h.blockComments,h.dqStrings,h.sqStrings,{regex:/^(\w+)(?:\(.*?\))?\s*(?::-|\.)/gm,type:"k9"},{regex:/\b(true|false|Yes|No|not|fail)\b/gi,type:"e0"},{regex:/\b(catch|throw|repeat)\b/g,type:"k1"},{regex:/^(\?-)/g,type:"k9"},{regex:/\b(is)\b/g,type:"k3"},{regex:/[A-Z_][\w]*/g,type:"k7"},h.brackets,h.floats,h.int,h.fCalls]}}]),t}(),Q=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.int,h.floats,{regex:/[\b\W](-?\$[A-F0-9]+)\b/gi,type:"n2"},{regex:/[\b\W](-?%[01]+)\b/gi,type:"n3"},{regex:/[\b\W](\*\w+)\b/gi,type:"text"},h.dqStrings,{regex:/[[\]()]+/g,type:"g0"},{regex:/#\w+/gim,type:"g0"},{regex:/[@?]\w+/gim,type:"g1"},{regex:/(IncludeFile|XIncludeFile|IncludeBinary|IncludePath) (.*?)$/gim,type:"k0"},{regex:/\b(Break|Case|Continue|Default|Else|ElseIf|End|EndIf|EndSelect|For|ForEver|ForEach|Gosub|Goto|If|Next|Repeat|Return|FakeReturn|Select|Until|Wend|While|To|Step)\b/gi,type:"k1"},{regex:/\b(Array|List|Map|Procedure(?:C|Dll|CDll)?|ProcedureReturn|EndProcedure|Declare(?:C|Dll|CDll)?|ImportC?|EndImport|As|Macro|MacroExpandedCount|EndMacro|UndefineMacro|DeclareModule|EndDeclareModule|Module|EndModule|UseModule|UnuseModule|With|EndWith|PrototypeC?|Runtime|Swap|Data|DataSection|EndDataSection|Read|Restore)\b/gi,type:"k2"},{regex:/\b(ReDim|Dim|NewList|NewMap|Enumeration|EndEnumeration|Interface|Extends|EndInterface|Structure(?:Union)?|EndStructure(?:Union)?)\b/gi,type:"k4"},{regex:/\b(?:ReDim|Dim|NewList|NewMap)\s*([\w]+)\(/gim,type:"text"},{regex:/\b(Define|Global|Protected|Shared|Static|Threaded)\b/gi,type:"k3"},{regex:/[\w\])]\.(s{\d+}|(?:p-ascii|p-utf8|p-bstr|p-unicode|p-variant)|\w+)(?:\([\d,]*\))?/gi,type:"k4"},{regex:/\b(CompilerIf|CompilerElse|CompilerElseIf|CompilerEndIf|CompilerSelect|CompilerCase|CompilerDefault|CompilerEndSelect|CompilerError|CompilerWarning|EnableExplicit|DisableExplicit|EnableASM|DisableASM|EnableDebugger|DisableDebugger|Debug|DebugLevel|CallDebugger)\b/gi,type:"k5"},{regex:/\W(And|Not|Or|Xor)\W/gi,type:"k6"},{regex:/(<=|=<|>=|=>|<>|<<|>>|=|-|\+|\/|%|<|>|&|\||!|~)/gi,type:"k6"},{regex:/(\*)(?:\d|\s*(?:\b|-|\(|%|\$|\*))/gi,type:"k6"},{regex:/(\w+)::/gi,type:"k7"},{regex:/(\w+):/gi,type:"k8"},h.fCalls,{regex:/;.*$/gm,type:"c0"},{regex:/\\(\w+)\b/g,type:"m3"}]}}],[{key:"alias",value:function(){return["pb"]}}]),t}(),K=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.prop,{regex:/\b([A-Z]\w+)\b/g,type:"k5"},{regex:/^(import)(\s+[\w.]+)/gm,type:["k0","k5"]},{regex:/\b(bool|char|double|float|int|long|short|void|string)\b/g,type:"k5"},h.mCalls,h.null,h.boolean,h.slashComments,h.blockComments,h.int,h.floats,h.brackets]}}]),t}(),ee=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,null,[{key:"alias",value:function(){return[]}}]),t}(),te=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/^(.*?)$/g,type:"text"}]}}]),t}(),re=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,{regex:/("[\s\S]*?")/g,type:"s5"},{regex:/\b(yes|no)\b/gi,type:"e0"},{regex:/\b([\w-]+)(=)/gi,type:["k6","k3"]},{regex:/[^\b](:local|:global)\s/gm,type:"k2"},{regex:/^\/\w+(?:\s+[a-z-]+)*\s*$/gm,type:"k10"},{regex:/\b(add|set|print|enable|disable|export|find|get|move|remove)\b/gi,type:"k9"},{regex:/[^\b](:[a-z-]+)\s/gm,type:"k0"},{regex:/\$[\w]*/gi,type:"k7"},{regex:/(?:[a-f0-9]{2}:){5}(?:[a-f0-9]{2})/gi,type:"s0"},{regex:/(?:\d{1,3}\.){3}(?:\d{1,3})(?:\/\d{1,2})?/gi,type:"s0"},h.poundComments,{regex:/[\b\W](-?\d+)([a-z]{1,4})?[\b\W]/gi,type:"n0"},h.int,h.hex,h.brackets]}}],[{key:"alias",value:function(){return["mikrotik","mt","switchos","ros"]}}]),t}(),ne=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){function e(e){return e.text.match(/^%r/)?e.type="e2":e.text.match(/^%x/)&&(e.type="e4"),[e]}this.rules=[h.dqStrings,h.sqStrings,h.heredoc,{regex:/(`(?:[^`\\]|\\.)*`)/g,type:"e4"},h.boolean,{regex:/\b(nil)\b/gi,type:"e1"},h.fCalls,h.prop,{regex:/@{1,2}[A-Za-z_]\w*\W/g,type:"k7"},{regex:/[^:](:[\w]+)\b/g,type:"k6"},{regex:/(\$[a-z0-9_-]+|\$.)\W/gi,type:"k9"},{regex:/\b(begin|break|case|do|else|elsif|end|ensure|for|if|in|next|redo|rescue|retry|then|unless|until|when|while)\b/gi,type:"k1"},{regex:/\b((?:__)?[A-Z][A-Z0-9_]+)\b/g,type:"e3"},{regex:/\b(alias|class|defined\?|undef|def|module|return|self|super|yield)\W/gi,type:"k0"},{regex:/\b(and|not|or)\b/gi,type:"k3"},h.poundComments,{regex:/^=begin[\S\s]*?^=end/gim,type:"c2"},{regex:/(%[iqrswx](\W)(?:[^\2\n\\]|\\.)*\2[iomx]*)/gim,type:"s2",filter:e},{regex:/(%[iqrswx]?(\{(?:[^}\\]|\\.)*}|\[(?:[^}\\]|\\.)*]|\((?:[^)\\]|\\.)*\))[iomx]*)/gim,type:"s2",filter:e},{regex:/\W(\/(?:[^/\\]|\\.)*\/\w*)\W/g,type:"e2"},{regex:/\W\?(?:\w|\\M|\\C)(?:-\w|-\\M|-\\C)*\b/g,type:"n1"},{regex:/[\b\W](-?\d[\d_]+?)(?!\.)\b/g,type:"n1"},{regex:/[\b\W](-?0x[A-F0-9][A-F0-9_]+)\b/gi,type:"n2"},{regex:/[\b\W](-?0b[01][01_]+)\b/gi,type:"n3"},{regex:/[\b\W](-?[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?[ji]?)\b/gi,type:"n0"},h.brackets]}}]),t}(),ie=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.char,{regex:/r((#+)".*?"\2)/gm,type:"s0"},{regex:/("(?:\\.|\\\s*\n|\\s*\r\n|[^\\"])*")/g,type:"s0"},{regex:/^\s*#.*$/gm,type:"k4"},{regex:/fn\s+([\w]+)\s*(<\w+\s*>)?\(/gm,type:"k0"},{regex:/\b\.?([\w]+)\s*(\(|::)/gm,type:"k1"},{regex:/\b([\w]+)!/gm,type:"k9"},{regex:/\bself\b/gi,type:"k9"},h.boolean,{regex:/\b(while|loop|in|for|if|else|do|continue|break)\b/g,type:"k1"},{regex:/\b(type|struct|let|enum)\b/g,type:"k2"},{regex:/\b(const)\b/g,type:"k8"},{regex:/\b(yield|where|virtual|use|unsized|unsafe|trait|super|static|return|ref|pure|pub|proc|priv|override|offsetof|mut|move|mod|match|macro|impl|fn|final|extern|crate|box|become|as|alignof|abstract)\b/g,type:"k0"},{regex:/\b(sizeof|typeof)\b/g,type:"k3"},{regex:/\b([0-9_]+\.?[0-9_]+?(e\+[0-9_]+)?)(?:f32|f64)?\b/gim,type:"n0"},{regex:/\b([0-9_]+|0o[0-9_]+|0x[A-F0-9_]+|0b[0-1_]+)(?:u8|i8|u16|i16|u32|i32|u64|i64|isize|usize)?\b/gim,type:"n1"},h.slashComments,h.blockComments,{regex:/(?:^|[^\\])\/\/[/!].*$/gm,type:"c2"},{regex:/\/\*[*!][\s\S]*?\*\//gm,type:"c2"},h.brackets,{regex:/\W(&)\w/g,type:"k3"}]}}]),t}(),ae=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.char,{regex:/s"(?:[^"\\]|\\.)*"/g,type:"s2"},{regex:/`(?:[^`\\]|\\.)*`/g,type:"k7"},{regex:/@[\W\w_][\w]+/g,type:"k11"},{regex:/\b([A-Z]\w*)\b/g,type:"k5"},{regex:/\b(while|try|catch|else|throw|break|if|do|goto|switch|for|match)\b/g,type:"k1"},{regex:/(package|import)(\s+[\w.]+)/gm,type:["k0","k10"]},{regex:/[\b\w\s)](_|:|@|#|<-|←|<:|<%|=|=>|⇒|>:)[\b\w\s]/g,type:"k3"},{regex:/\b(abstract|class|case|extends|final|finally|forSome|implicit|lazy|object|override|private|protected|return|sealed|trait|with|yield)\b/g,type:"k0"},{regex:/\b(def)\s+(\w+)\b/gm,type:["k2","m0"]},{regex:/\b(type)\s+(\w+)\b/gm,type:["k2","k5"]},{regex:/\b(val)\s+(\w+)\b/gm,type:["k2","k7"]},{regex:/\b(var)\s+(\w+)\b/gm,type:["k2","k7"]},{regex:/\b(this|super)\b/g,type:"k9"},{regex:/\b(new)\b/g,type:"k3"},h.mCalls,h.fCalls,h.null,h.boolean,h.slashComments,h.blockComments,h.docComments,h.int,h.floats,h.bin,h.brackets]}}]),t}(),se=function(){a(t,L);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){y(s(t.prototype),"setupLanguage",this).call(this),this.rules.shift();var e=[h.slashComments,A.pseudoElements,A.idSelector,A.classSelector,{regex:/\b([\w-]+)\s*\(/gm,type:"m0"},{regex:/\$[\w-]+\b/g,type:"k7"},{regex:/@[\w-]+\b/g,type:"k9"},{regex:/&/gi,type:"k3"}];this.rules=this.rules.concat(e)}}],[{key:"alias",value:function(){return["sass"]}}]),t}(),oe=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/(^#!.*?)\n/gi,type:"k4"},h.poundComments,{regex:/[^\\]("(?:[^"\\]|\\.)*")/g,type:"s0"},{regex:/`.*?`/gm,type:"s2"},{regex:/(\$)\(/gm,type:"s2"},{regex:/(\$\d)\b/gim,type:"k9"},{regex:/(\$\w+)\b/gim,type:"k7"},{regex:/^(\s*\w+)=/gm,type:"k7"},{regex:/^\s*\w+\)\s*$/gm,type:"k6"},{regex:/\b(if|fi|then|elif|else|for|do|done|until|while|break|continue|case|esac|in|eq|ne|gt|lt|ge|le)\b/gi,type:"k1"},{regex:/\b(return|function)\b/gi,type:"k0"},{regex:/^\s*\w+\(\)\s*\{/gm,type:"k0"},h.int]}}],[{key:"alias",value:function(){return["bash","sh","zsh"]}}]),t}(),le=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.poundComments,h.blockComments,{regex:/--.*$/gm,type:"c0"},h.null,h.sqStrings,{regex:/`\w+?`(?:\.`\w+?`)*/g,type:"k9"},{regex:/\b(all|and|any|between|exists|in|like|not|or|is null|is not null|unique|=|!=|<>|>|<|>=|<=|!<|!>)\b/gi,type:"k3"},{regex:/\b(bigint)\b/g,type:"k5"},{regex:/\b(unsigned)\b/g,type:"k8"},{regex:/\b(SELECT|INSERT|UPDATE|DELETE|INTO|FROM|CREATE|TABLE|VIEW|WHERE|TRIGGER|ALTER|ORDER BY|DESC|ASC|AS|BETWEEN|JOIN|LEFT|RIGHT|INNER|OUTER|USING|ON|UNION)\b/gi,type:"k0"},{regex:/\b[A-Z]+\b/g,type:"k0"},h.int,h.floats]}}]),t}(),ge=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,{regex:h.sqStrings.regex,type:"n0"},h.prop,h.slashComments,h.poundComments,h.blockComments,h.brackets,{regex:/\b(const|enum|local)\b/g,type:"k2"},{regex:/\b(break|case|catch|continue|else|for|foreach|if|switch|while|try|do)\b/g,type:"k1"},{regex:/\b(base|class|clone|constructor|default|extends|false|function|null|resume|return|static|this|throw|true|yield)\b/g,type:"k0"},{regex:/\b(delete|in|instanceof|typeof)\b/g,type:"k3"},h.mCalls,h.fCalls,h.octal,h.hex,h.floats,h.int]}}]),t}(),ue=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.boolean,{regex:/#.*$/gm,type:"k4"},h.prop,{regex:/(import )(.*?)$/gm,type:["k0","k10"]},{regex:/\b(nil)\b/gi,type:"e1"},{regex:/\b(break|case|continue|default|do|else|for|if|switch|while|catch|throw|try)\b/g,type:"k1"},{regex:/\b(var|let|enum|struct)\b/g,type:"k2"},{regex:/\b(Int|UInt|Float|Double|Bool|String|Character|Optional|Array|Dictionary)\b/g,type:"k5"},{regex:/\b(associatedtype|class|deinit|extension|func|init|inout|internal|operator|private|protocol|public|static|subscript|typealias|defer|fallthrough|guard|in|as|repeat|return|where|dynamicType|is|rethrows|super|self|Self|throws|associativity|convenience|dynamic|didSet|final|get|infix|indirect|lazy|left|mutating|none|nonmutating|optional|override|postfix|precedence|prefix|Protocol|required|right|set|Type|unowned|weak|willSet)\b/g,type:"k0"},h.mCalls,h.fCalls,{regex:/(?:^|[^\\])\/\/\/.*$/gm,type:"c2"},h.docComments,h.slashComments,h.blockComments,{regex:/[\b\W](-?0b[01_]+)\b/gi,type:"n3"},{regex:/[\b\W](-?0x[A-F0-9_]+)(?!\.)\b/gi,type:"n2"},{regex:/[\b\W](-?0o[0-7_]+)(?!\.)\b/g,type:"n4"},{regex:/[\b\W](-?[\d_]+)(?!\.)\b/g,type:"n1"},{regex:/(-?(?:[\d_]+\.[\d_]+(?:e[+-]?[\d_]+)?))/gi,type:"n0"},{regex:/(-?0x(?:[A-F0-9_]+\.[A-F0-9_]+(?:p[+-]?[A-F0-9_]+)?))/gi,type:"n2"},h.brackets]}}]),t}(),pe=function(){a(t,F);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){y(s(t.prototype),"setupLanguage",this).call(this);this.rules=[{regex:/\b(boolean|number|string|any|void|undefined|never|symbol)\b/g,type:"k5"},{regex:/\b(type|interface)\b/g,type:"k2"},{regex:/\b(abstract|implements|readonly)\b/g,type:"k8"},{regex:/\b(declare|namespace)\b/g,type:"k0"},{regex:/\b([\w]+)\s*</gm,type:"m0"},{regex:/[<>]/g,type:"g1"}].concat(this.rules)}}]),t}(),ce=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/((?:^\s*|\s+)--.*$)/gm,type:"c0"},{regex:/^\s*(?:use|library)\s*(\S+);/gim,type:"k9"},h.fCalls,{regex:/\*\*|\*|\/|\+|-|&|=|\/=|<|<=|>|>=/g,type:"g0"},h.dqStrings,{regex:/('.')/g,type:"s0"},h.brackets,{regex:/\b(alias|array|variable|downto|range|to|type|units)\b/g,type:"k2"},{regex:/\b(array|buffer|bus|file)\b/g,type:"k5"},{regex:/\b(if|else|elsif|end|for|while|loop|when|begin|block|case|exit|next|then)\b/g,type:"k1"},{regex:/\b(access|after|all|architecture|attribute|assert|body|component|configuration|constant|disconnect|entity|function|generate|generic|group|guarded|impure|in|inertial|inout|is|label|library|linkage|literal|map|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|record|return|select|severity|signal|shared|subtype|transport|unaffected|use|vaiable|with|wait|until)\b/g,type:"k0"},{regex:/\b(abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|nor|xor|xnor|new)\b/g,type:"k3"},h.floats]}}]),t}(),ye=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,h.boolean,h.prop,{regex:/(#.*?)(?:'|$)/gim,type:"k4"},{regex:/\b(Case|Catch|Continue|Each|Else|ElseIf|End|EndIf|Do|Finally|For|If|Loop|Next|OrElse|Then|Throw|Try|When|While)\b/g,type:"k1"},{regex:/(Imports )(.*?)$/gm,type:["k0","k10"]},{regex:/\b(Boolean|Byte|CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|CLng|CObj|CSByte|CShort|CSng|CStr|CType|CUInt|CULng|CUShort|Decimal|Double|Integer|Long|ParamArray|SByte|Short|Single|String|UInteger|ULong|UShort)\b/g,type:"k5"},{regex:/\b(Dim|Enum|Let|ReDim)\b/g,type:"k2"},{regex:/\b(Const|Shared|Static)\b/g,type:"k8"},{regex:/\b(AddHandler|AddressOf|Alias|As|ByRef|ByVal|Call|Class|Date|Declare|Default|Delegate|DirectCast|Erase|Error|Event|Exit|Friend|Function|Get|GetType|GetXMLNamespace|Global|GoSub|GoTo|Handles|Implements|In|Inherits|Interface|Lib|Like|Me|Module|MustInherit|MustOverride|MyBase|MyClass|Namespace|Narrowing|Nothing|NotInheritable|NotOverridable|Object|Of|On|Operator|Option|Optional|Out|Overloads|Overridable|Overrides|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|REM|RemoveHandler|Resume|Return|Select|Set|Shadows|Step|Stop|Structure|Sub|SyncLock|To|TryCast|Using|Variant|Wend|Widening|With|WithEvents|WriteOnly)\b/gi,type:"k0"},{regex:/\b(And|AndAlso|Is|IsNot|Mod|New|Not|Or|TypeOf|Xor)\b/g,type:"k3"},h.mCalls,h.fCalls,{regex:/'.*$/gm,type:"c0"},h.int,h.floats,h.brackets]}}],[{key:"alias",value:function(){return["vb"]}}]),t}(),fe=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[{regex:/<!DOCTYPE[\s\S]+?>/g,type:"k9"},{regex:/<\?xml[\s\S]+\?>/gi,type:"k4"},{regex:/<!--[\s\S]*?-->/g,type:"c1"},{regex:/(<!\[CDATA\[)([\s\S]*?)(]]>)/gim,type:["c9","text","c9"]},{regex:/(<)([A-Z:_][A-Z0-9:.-]*)([\s\S]*?)(\/?>)/gi,type:["g1","x1","text","g1"],filter:[null,null,function(e){return k(e,/\b([^\s\0"'>/=]+)(\s*=\s*)((['"]).*?\4|[^'" \t]+)/gi,function(e){return[C(e[1],"x2"),C(e[2],"k3"),C(e[3],"s0")]})},null]},{regex:/(<\/)([A-Z:_][A-Z0-9:.-]*\s*)(>)/gi,type:["g1","x1","g1"]}]}}],[{key:"alias",value:function(){return["html"]}}]),t}(),be=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.poundComments,h.boolean,h.null,{regex:/^%[A-Z]+\s+.*$/gm,type:"k4"},{regex:/\b!{1,2}[A-Z]+\b/gi,type:"k5"},{regex:/\b[a-z][a-z0-9_-]*:/gim,type:"k7"},{regex:/\{|}|\(|\)|\[|]/g,type:"g1"},{regex:/\s+(?:>|\|)[\r|\n]+((?:\s+[^\r\n]+[\r|\n]+)+)/gi,type:"s5"},h.dqStrings,h.sqStrings,h.floats]}}]),t}(),de=function(){a(t,x);var e=p(t);function t(){return r(this,t),e.apply(this,arguments)}return i(t,[{key:"setupLanguage",value:function(){this.rules=[h.dqStrings,{regex:/`\w*\b/g,type:"k4"},{regex:/\[( *\d+(?: *\: *\d+) *)\]/g,type:"e3"},{regex:/\b(for|generate|if|else|repeat|case|endcase|begin|end|ifnone)\b/g,type:"k1"},{regex:/\b(output|input|inout|reg|wire|assign)\b/g,type:"k5"},{regex:/\b(module|endmodule|always|function|endfunction)\b/g,type:"k2"},{regex:/\b(or|rpmos|tranif1|and|initial|rtran|tri|parameter|rtranif0|tri0|pmos|rtranif1|tri1|buf|endprimitive|integer|posedge|scalared|triand|bufif0|endspecify|join|primitive|small|trior|bufif1|endtable|large|pull0|specify|trireg|endtask|macromodule|pull1|specparam|vectored|casex|event|medium|pullup|strong0|wait|casez|pulldown|strong1|wand|cmos|force|nand|rcmos|supply0|weak0|deassign|forever|negedge|real|supply1|weak1|default|nmos|realtime|table|defparam|nor|task|disable|highz0|not|release|time|wor|edge|highz1|notif0|tran|xnor|notif1|rnmos|tranif0|xor)\b/g,type:"k0"},h.slashComments,h.blockComments,{regex:/-?\d*'s?d[0-9_xz]+\b/gi,type:"n1"},{regex:/-?\d*'s?h[0-9a-f_xz]+\b/gi,type:"n2"},{regex:/-?\d*'s?b[01_xz]+\b/gi,type:"n3"},{regex:/-?\d*'s?o[0-7_xz]+\b/gi,type:"n4"},h.int,h.brackets]}}]),t}(),he=Object.freeze({__proto__:null,generic:x,abap:t,apache:v,assembly:w,avrassembly:S,cpp:_,csharp:E,css:L,cython:I,cordpro:W,diff:N,dockerfile:D,go:$,groovy:O,ini:T,java:R,javascript:F,json:j,kotlin:z,latex:B,less:Z,lighttpd:M,lua:P,markdown:U,matlab:G,nginx:H,nsis:V,php:J,powershell:X,prolog:Y,purebasic:Q,python:q,qml:K,r:ee,raw:te,routeros:re,ruby:ne,rust:ie,scala:ae,scss:se,shell:oe,sql:le,squirrel:ge,swift:ue,typescript:pe,vhdl:ce,visualbasic:ye,xml:fe,yaml:be,verilog:de}),me={standard:"generic"},xe={},ke=!1;function ve(e){if(!ke)for(var t in ke=!0,he)if("function"==typeof he[t].alias){var r,n=function(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=b(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,o=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return s=e.done,e},e:function(e){o=!0,a=e},f:function(){try{s||null==r.return||r.return()}finally{if(o)throw a}}}}(he[t].alias());try{for(n.s();!(r=n.n()).done;){var i=r.value;me[i]=t}}catch(e){n.e(e)}finally{n.f()}}return me[e]}function we(e){return e=ve(e=(e||"").toLowerCase())||e,he[e]?e:null}var Ce={document:document,window:window};function Se(){return document}function _e(){return window}function Ee(e){var t=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];e.style.display=!0===t?"block":"none"}function Ae(e){e.parentNode.removeChild(e)}function Le(e){return null!=e&&0<e.length?Se().querySelectorAll(e):[]}function qe(e,t){return e.getAttribute("data-"+t)||null}function Ie(e,t){return e.getAttribute(t)||null}function We(e,t){return e.parentNode.insertBefore(t,e)}function Ne(e,t,r){var n=Se(),i=n.createElement(e);if(0<r.length)for(var a=0;a<r.length;a++){var s=r[a];if(null!==s&&!1!==s)if(void 0!==s)if(s.push)for(var o=0;o<s.length;o++){var l=s[o];null!==l&&!1!==l&&(void 0!==l?l.appendChild?i.appendChild(l):i.appendChild(n.createTextNode(l)):i.appendChild(n.createTextNode("#INVALID_ELEMENT#")))}else s.appendChild?i.appendChild(s):i.appendChild(n.createTextNode(s));else i.appendChild(n.createTextNode("#INVALID_ELEMENT#"))}function g(e,t){i.addEventListener(e,function(e){e.preventDefault(),e.stopPropagation(),t&&t.apply(i,[e,i])})}for(var u in t)if(Object.prototype.hasOwnProperty.call(t,u)){var p=t[u];if("on"===u.substr(0,2)){if(null===p)continue;g(u.substr(2).toLowerCase(),p)}else{if(null==p)continue;switch(u){case"className":i.setAttribute("class",p);break;case"htmlFor":i.setAttribute("for",p);break;default:i.setAttribute(u,p)}}}return i.on=g,i}function De(e,t){for(var r=arguments.length,n=new Array(2<r?r-2:0),i=2;i<r;i++)n[i-2]=arguments[i];if("function"!=typeof e)return Ne(e,t,n);var a=g(e,[t||{}].concat(n));return"function"==typeof a.render?a.render():a instanceof HTMLElement?a:void Se().createTextNode("#INVALID_JSX_ELEMENT#")}function $e(e,t){e.classList.contains(t)||e.classList.add(t)}function Oe(e,t){e.classList.contains(t)&&e.classList.remove(t)}function Te(e,t){return e.classList.contains(t)}function Re(e,t){e.classList.contains(t)?e.classList.remove(t):e.classList.add(t)}var Fe=_e();function je(){var e;void 0!==Fe.console&&Fe.console.log&&(e=Fe.console).log.apply(e,arguments)}var ze=Object.freeze({__proto__:null,globals:Ce,getDocument:Se,getWindow:_e,displayElement:Ee,disposeElement:Ae,getElements:Le,getElement:function(e){return null!=e&&0<e.length?Se().querySelector(e):null},getElementDataAttribute:qe,getElementAttribute:Ie,insertBefore:We,createNode:Ne,createElement:De,renderComponent:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return null!==t&&t.appendChild(e),e},addClass:$e,removeClass:Oe,hasClass:Te,toggleClass:Re,logInfo:je,logError:function(){var e;void 0!==Fe.console&&Fe.console.error?(e=Fe.console).error.apply(e,arguments):je.apply(void 0,arguments)}});function Be(e){var t=e.tokens,r=e.options,n=function(e,t){if("string"!=typeof e||0===e.length)return function(){return!1};var r=parseInt(t),a=!isNaN(r)&&1<r?r-1:0,s={};return e.split(",").forEach(function(e){var t=e.match(/([0-9]+)-([0-9]+)/);if(null!=t){var r=parseInt(t[1])-a,n=parseInt(t[2])-a;if(r<n)for(var i=r;i<=n;i++)s[""+i]=!0}else s[""+(parseInt(e)-a)]=!0}),function(e){return s[""+e]||!1}}(r.highlight,r.lineoffset),i=[],a=[];t.forEach(function(t){var e=t.text.split("\n");1===e.length?a.push([t.type,t.text]):(a.push([t.type,e.shift()]),e.forEach(function(e){i.push(a),(a=[]).push([t.type,e])}))}),i.push(a);var s=[];return 0<r.lineoffset&&s.push("counter-reset: enlighter "+(parseInt(r.lineoffset)-1)),De("div",{className:"enlighter",style:s.join(";")},i.map(function(e,t){return De("div",{className:n(t+1)?"enlighter-special":""},De("div",null,e.map(function(e){return De("span",{className:"enlighter-"+e[0]},e[1])})))}))}function Ze(e){var t=[];e.name&&t.push("enlighter-"+e.name),e.className&&("string"==typeof e.className?t.push(e.className):t.push.apply(t,f(e.className)));for(var r=arguments.length,n=new Array(1<r?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];return De.apply(ze,["div",{className:t.join(" ")}].concat(n))}function Me(e){var t=["enlighter-btn"];return e.name&&t.push("enlighter-btn-"+e.name),De("div",{className:t.join(" "),onClick:e.onClick,title:e.tooltip},e.text||null)}function Pe(){_e().open("https://enlighterjs.org")}var Ue=Object.freeze({__proto__:null,raw:function(e){return De(Me,{name:"raw",tooltip:"Plain text",onClick:function(){e.toggleClass("enlighter-show-rawcode")}})},copy:function(e){return De(Me,{name:"copy",tooltip:"Copy to clipboard",onClick:function(){!function(e){var t=Se(),r=_e(),n=De("pre",{className:"enlighter-clipboard"},e);t.body.appendChild(n);try{var i=t.createRange();i.selectNodeContents(n);var a=r.getSelection();a.removeAllRanges(),a.addRange(i)}catch(e){return}var s=function(){try{return t.execCommand("copy")}catch(e){return!1}}();r.getSelection().removeAllRanges(),Ae(n)}(e.getRawCode())}})},window:function(r){var n=_e();return De(Me,{name:"window",tooltip:"Open code in new window",onClick:function(){var e=n.open("","","width="+n.screen.width/2+", height="+n.screen.height/2+", menubar=no, titlebar=no, toolbar=no, top=100, left=100, scrollbars=yes, status=no"),t=r.getRawCode().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;");e.document.body.innerHTML="<pre>"+t+"</pre>",e.document.title="Sourcecode | EnlighterJS Syntax Highlighter"}})},website:function(){return De(Me,{name:"website",tooltip:"EnlighterJS 3 Syntax Highlighter",onClick:Pe})},collapse:function(e){return De(Me,{name:"collapse",tooltip:"Expand",onClick:function(){e.toggleClass("enlighter-collapse-full")}})}});function Ge(t){var e=function(e){for(var t,r=[],n=/{BTN_([A-Z_]+)}/g;null!=(t=n.exec(e));)r.push(t[1].toLowerCase());return r}(t.layout).map(function(e){return Ue[e]?De(Ue[e],{getRawCode:t.getRawCode,toggleClass:t.toggleClass}):null}).filter(function(e){return null!==e});return De(Ze,{name:"toolbar-"+t.name,className:"enlighter-toolbar"},e)}function He(e,t){return De("div",{className:"enlighter-raw"},t)}function Ve(e){var t=null,r=e[0].params,n=["enlighter-default","enlighter-v-standard","enlighter-t-"+e[0].params.theme];function i(e){Re(t,e)}function a(){return e[0].code}return!0===r.linehover&&n.push("enlighter-hover"),!0===r.linenumbers&&n.push("enlighter-linenumbers"),"scroll"===r.textOverflow&&n.push("enlighter-overflow-scroll"),!0===r.collapse&&n.push("enlighter-collapse"),0<r.cssClasses.length&&n.push.apply(n,f(r.cssClasses)),t=De(Ze,{className:n},De(Ge,{name:"top",layout:r.toolbarTop,toggleClass:i,getRawCode:a}),De(Be,{tokens:e[0].tokens,options:e[0].params}),De(He,null,e[0].code),De(Ge,{name:"bottom",layout:r.toolbarBottom,toggleClass:i,getRawCode:a})),r.rawcodeDbclick&&t.on("dblclick",function(){i("enlighter-show-rawcode")}),t}function Je(e){return De("span",{className:"enlighter"},e.tokens.map(function(e){return De("span",{className:"enlighter-"+e.type},e.text)}))}function Xe(r){var n=0,i=[];return i=r.dataset.map(function(e,t){return De(Me,{onClick:function(){return e=t,Oe(i[n],"enlighter-active"),$e(i[e],"enlighter-active"),n=e,void r.onChange(e);var e},text:e.params.title||e.params.language})}),$e(i[0],"enlighter-active"),De(Ze,{name:"codegroup-switch"},i)}var Ye=Object.freeze({__proto__:null,standard:Ve,inline:function(e){var t=e[0].params,r=["enlighter-default","enlighter-v-inline","enlighter-t-"+t.theme];return 0<t.cssClasses.length&&r.push.apply(r,f(t.cssClasses)),De(Ze,{className:r},De(Je,{tokens:e[0].tokens,options:t}))},codegroup:function(e){var t,r=null,n=e[0].params,i=0,a=["enlighter-default","enlighter-v-codegroup","enlighter-t-"+n.theme];function s(e){Re(r,e)}function o(){return e[i].code}function l(e){Ee(t[i],!1),Ee(t[e],!0),i=e}return!0===n.linehover&&a.push("enlighter-hover"),!0===n.linenumbers&&a.push("enlighter-linenumbers"),"scroll"===n.textOverflow&&a.push("enlighter-overflow-scroll"),!0===n.collapse&&a.push("enlighter-collapse"),0<n.cssClasses.length&&a.push.apply(a,f(n.cssClasses)),t=e.map(function(e){return De("div",{style:"display:none"},De(Be,{tokens:e.tokens,options:e.params}),De(He,null,e.code))}),l(0),r=De(Ze,{className:a},De(Xe,{onChange:l,dataset:e}),De(Ze,{name:"codegroup-wrapper"},De(Ge,{name:"top",layout:n.toolbarTop,toggleClass:s,getRawCode:o}),t,De(Ge,{name:"bottom",layout:n.toolbarBottom,toggleClass:s,getRawCode:o}))),n.rawcodeDbclick&&r.on("dblclick",function(){s("enlighter-show-rawcode")}),r}});function Qe(e){var t;return(t=((t=e[0].params.layout)||"").toLowerCase(),Ye[t]?Ye[t]:Ve)(e.map(function(e){var t,r,n,i=e.code,a=e.params;if("string"!=typeof i)throw new TypeError("EnlighterJS Engine requires string input");return{tokens:(t=a.language,r=c.language||null,n=we(t)||we(r)||"generic",xe[n]||(xe[n]=new he[n]),xe[n]).analyze(i),params:a,code:i}}))}function Ke(i,t){function a(e){return function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var n=t.pop(),i=0;i<t.length;i++){var a=t[i];if(null!=a)return a}return n}(t[e],c[e],null)}function e(e,t){var r=qe(i,"enlighter-"+e),n=a(e);if(!(r&&0<r.length))return n;switch(t){case"boolean":return"true"===(r=r.toLowerCase().trim())||"false"!==r&&n;case"int":return r=parseInt(r),isNaN(r)?n:r;default:return r}}var r=a("cssClasses")||"";!0===a("retainCssClasses")&&(r+=" "+(Ie(i,"class")||""));var n=r.replace(/\s+/g," ").trim().split(" ");return{language:e("language"),theme:e("theme"),layout:e("layout"),title:e("title"),highlight:e("highlight"),linenumbers:e("linenumbers","boolean"),lineoffset:e("lineoffset","int"),indent:a("indent"),ampersandCleanup:a("ampersandCleanup"),linehover:a("linehover"),rawcodeDbclick:a("rawcodeDbclick"),textOverflow:a("textOverflow"),collapse:a("collapse"),cssClasses:n,toolbarTop:a("toolbarTop"),toolbarBottom:a("toolbarBottom"),toolbarHeader:a("toolbarHeader")}}var et=[];function tt(e){var t=function(e){for(var t=0;t<et.length;t++)for(var r=0;r<et[t].elements.length;r++)if(et[t].elements[r]===e)return t;return!1}(e);if(!1===t)return!1;var r=et.splice(t,1);return Ae(r[0].wrapper),r[0].elements.map(function(e){return Oe(e,"enlighter-origin")}),!0}function rt(e){var t,r,n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};try{if(Array.isArray(e)||(e=[e]),0===e.length)return!1;if(!1===n)return tt(e[0]);if(Te(e[0],"enlighter-origin"))return!1;var i=Qe(e.map(function(e){var t=Ke(e,n),r=function(e,t){var r=e.innerHTML||"";r=(r=r.replace(/(^\s*\n|\n\s*$)/gi,"")).replace(/&lt;/gim,"<").replace(/&gt;/gim,">").replace(/&nbsp;/gim," "),!0===t.ampersandCleanup&&(r=r.replace(/&amp;/gim,"&"));var n=t.indent;return!1!==n&&-1<n&&(r=r.replace(/(\t*)/gim,function(e,t){return new Array(n*t.length+1).join(" ")})),r}(e,t);return $e(e,"enlighter-origin"),{element:e,code:r,params:t}}));return We(e[0],i),t=e,r=i,et.push({elements:t,wrapper:r}),!0}catch(e){return console.error("EnlighterJS Internal Error:",e),!1}}return e.enlight=rt,e.init=function(){var e,t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"pre.ejs",r=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"code.ejs",n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};e=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null,Object.assign(c,e||{});for(var i=Le(t),a=Le(r),s=function(e){for(var t={},r=[],n=0;n<e.length;n++){var i=qe(e[n],"enlighter-group");i?(t[i]||(t[i]=[]),t[i].push(e[n])):r.push(e[n])}return{standalone:r,groups:Object.keys(t).map(function(e){return t[e]})}}(i),o=s.standalone,l=s.groups,g=0;g<o.length;g++)rt(o[g],{layout:n.block||"standard"});for(var u=0;u<l.length;u++)rt(l[u],{layout:n.codegroup||"codegroup"});for(var p=0;p<a.length;p++)rt(a[p],{layout:n.inline||"inline"})},e.version="3.4.0",e}({});!function(n){"function"==typeof n&&n.fn&&(n.fn.enlight=function(n){return n=!0===(n=void 0===n?{}:n)?{}:n,this.each(function(){EnlighterJS.enlight(this,n)})})}(window.jQuery);;;!function(e,n){if("undefined"!=typeof EnlighterJS){var o={"selectors":{"block":"pre.EnlighterJSRAW","inline":"code.EnlighterJSRAW"},"options":{"indent":4,"ampersandCleanup":true,"linehover":false,"rawcodeDbclick":false,"textOverflow":"break","linenumbers":false,"theme":"monokai","language":"generic","retainCssClasses":false,"collapse":false,"toolbarOuter":"","toolbarTop":"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}","toolbarBottom":""}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})("Error: EnlighterJS resources not loaded yet!")}}(window,console);;(function(window,document){'use strict';var supportedBrowser=false,loaded=false;if(document.querySelector){if(window.addEventListener){supportedBrowser=true;}}
window.wp=window.wp||{};if(!!window.wp.receiveEmbedMessage){return;}
window.wp.receiveEmbedMessage=function(e){var data=e.data;if(!data){return;}
if(!(data.secret||data.message||data.value)){return;}
if(/[^a-zA-Z0-9]/.test(data.secret)){return;}
var iframes=document.querySelectorAll('iframe[data-secret="'+data.secret+'"]'),blockquotes=document.querySelectorAll('blockquote[data-secret="'+data.secret+'"]'),i,source,height,sourceURL,targetURL;for(i=0;i<blockquotes.length;i++){blockquotes[i].style.display='none';}
for(i=0;i<iframes.length;i++){source=iframes[i];if(e.source!==source.contentWindow){continue;}
source.removeAttribute('style');if('height'===data.message){height=parseInt(data.value,10);if(height>1000){height=1000;}else if(~~height<200){height=200;}
source.height=height;}
if('link'===data.message){sourceURL=document.createElement('a');targetURL=document.createElement('a');sourceURL.href=source.getAttribute('src');targetURL.href=data.value;if(targetURL.host===sourceURL.host){if(document.activeElement===source){window.top.location.href=data.value;}}}}};function onLoad(){if(loaded){return;}
loaded=true;var isIE10=-1!==navigator.appVersion.indexOf('MSIE 10'),isIE11=!!navigator.userAgent.match(/Trident.*rv:11\./),iframes=document.querySelectorAll('iframe.wp-embedded-content'),iframeClone,i,source,secret;for(i=0;i<iframes.length;i++){source=iframes[i];if(!source.getAttribute('data-secret')){secret=Math.random().toString(36).substr(2,10);source.src+='#?secret='+secret;source.setAttribute('data-secret',secret);}
if((isIE10||isIE11)){iframeClone=source.cloneNode(true);iframeClone.removeAttribute('security');source.parentNode.replaceChild(iframeClone,source);}}}
if(supportedBrowser){window.addEventListener('message',window.wp.receiveEmbedMessage,false);document.addEventListener('DOMContentLoaded',onLoad,false);window.addEventListener('load',onLoad,false);}})(window,document);;(function($){var version='2.2.0';var optionOverrides={};var defaults={exclude:[],excludeWithin:[],offset:0,direction:'top',delegateSelector:null,scrollElement:null,scrollTarget:null,autoFocus:false,beforeScroll:function(){},afterScroll:function(){},easing:'swing',speed:400,autoCoefficient:2,preventDefault:true};var getScrollable=function(opts){var scrollable=[];var scrolled=false;var dir=opts.dir&&opts.dir==='left'?'scrollLeft':'scrollTop';this.each(function(){var el=$(this);if(this===document||this===window){return;}
if(document.scrollingElement&&(this===document.documentElement||this===document.body)){scrollable.push(document.scrollingElement);return false;}
if(el[dir]()>0){scrollable.push(this);}else{el[dir](1);scrolled=el[dir]()>0;if(scrolled){scrollable.push(this);}
el[dir](0);}});if(!scrollable.length){this.each(function(){if(this===document.documentElement&&$(this).css('scrollBehavior')==='smooth'){scrollable=[this];}
if(!scrollable.length&&this.nodeName==='BODY'){scrollable=[this];}});}
if(opts.el==='first'&&scrollable.length>1){scrollable=[scrollable[0]];}
return scrollable;};var rRelative=/^([\-\+]=)(\d+)/;$.fn.extend({scrollable:function(dir){var scrl=getScrollable.call(this,{dir:dir});return this.pushStack(scrl);},firstScrollable:function(dir){var scrl=getScrollable.call(this,{el:'first',dir:dir});return this.pushStack(scrl);},smoothScroll:function(options,extra){options=options||{};if(options==='options'){if(!extra){return this.first().data('ssOpts');}
return this.each(function(){var $this=$(this);var opts=$.extend($this.data('ssOpts')||{},extra);$(this).data('ssOpts',opts);});}
var opts=$.extend({},$.fn.smoothScroll.defaults,options);var clickHandler=function(event){var escapeSelector=function(str){return str.replace(/(:|\.|\/)/g,'\\$1');};var link=this;var $link=$(this);var thisOpts=$.extend({},opts,$link.data('ssOpts')||{});var exclude=opts.exclude;var excludeWithin=thisOpts.excludeWithin;var elCounter=0;var ewlCounter=0;var include=true;var clickOpts={};var locationPath=$.smoothScroll.filterPath(location.pathname);var linkPath=$.smoothScroll.filterPath(link.pathname);var hostMatch=location.hostname===link.hostname||!link.hostname;var pathMatch=thisOpts.scrollTarget||(linkPath===locationPath);var thisHash=escapeSelector(link.hash);if(thisHash&&!$(thisHash).length){include=false;}
if(!thisOpts.scrollTarget&&(!hostMatch||!pathMatch||!thisHash)){include=false;}else{while(include&&elCounter<exclude.length){if($link.is(escapeSelector(exclude[elCounter++]))){include=false;}}
while(include&&ewlCounter<excludeWithin.length){if($link.closest(excludeWithin[ewlCounter++]).length){include=false;}}}
if(include){if(thisOpts.preventDefault){event.preventDefault();}
$.extend(clickOpts,thisOpts,{scrollTarget:thisOpts.scrollTarget||thisHash,link:link});$.smoothScroll(clickOpts);}};if(options.delegateSelector!==null){this.off('click.smoothscroll',options.delegateSelector).on('click.smoothscroll',options.delegateSelector,clickHandler);}else{this.off('click.smoothscroll').on('click.smoothscroll',clickHandler);}
return this;}});var getExplicitOffset=function(val){var explicit={relative:''};var parts=typeof val==='string'&&rRelative.exec(val);if(typeof val==='number'){explicit.px=val;}else if(parts){explicit.relative=parts[1];explicit.px=parseFloat(parts[2])||0;}
return explicit;};var onAfterScroll=function(opts){var $tgt=$(opts.scrollTarget);if(opts.autoFocus&&$tgt.length){$tgt[0].focus();if(!$tgt.is(document.activeElement)){$tgt.prop({tabIndex:-1});$tgt[0].focus();}}
opts.afterScroll.call(opts.link,opts);};$.smoothScroll=function(options,px){if(options==='options'&&typeof px==='object'){return $.extend(optionOverrides,px);}
var opts,$scroller,speed,delta;var explicitOffset=getExplicitOffset(options);var scrollTargetOffset={};var scrollerOffset=0;var offPos='offset';var scrollDir='scrollTop';var aniProps={};var aniOpts={};if(explicitOffset.px){opts=$.extend({link:null},$.fn.smoothScroll.defaults,optionOverrides);}else{opts=$.extend({link:null},$.fn.smoothScroll.defaults,options||{},optionOverrides);if(opts.scrollElement){offPos='position';if(opts.scrollElement.css('position')==='static'){opts.scrollElement.css('position','relative');}}
if(px){explicitOffset=getExplicitOffset(px);}}
scrollDir=opts.direction==='left'?'scrollLeft':scrollDir;if(opts.scrollElement){$scroller=opts.scrollElement;if(!explicitOffset.px&&!(/^(?:HTML|BODY)$/).test($scroller[0].nodeName)){scrollerOffset=$scroller[scrollDir]();}}else{$scroller=$('html, body').firstScrollable(opts.direction);}
opts.beforeScroll.call($scroller,opts);scrollTargetOffset=explicitOffset.px?explicitOffset:{relative:'',px:($(opts.scrollTarget)[offPos]()&&$(opts.scrollTarget)[offPos]()[opts.direction])||0};aniProps[scrollDir]=scrollTargetOffset.relative+(scrollTargetOffset.px+scrollerOffset+opts.offset);speed=opts.speed;if(speed==='auto'){delta=Math.abs(aniProps[scrollDir]-$scroller[scrollDir]());speed=delta/opts.autoCoefficient;}
aniOpts={duration:speed,easing:opts.easing,complete:function(){onAfterScroll(opts);}};if(opts.step){aniOpts.step=opts.step;}
if($scroller.length){$scroller.stop().animate(aniProps,aniOpts);}else{onAfterScroll(opts);}};$.smoothScroll.version=version;$.smoothScroll.filterPath=function(string){string=string||'';return string.replace(/^\//,'').replace(/(?:index|default).[a-zA-Z]{3,4}$/,'').replace(/\/$/,'');};$.fn.smoothScroll.defaults=defaults;})(jQuery);;
/*!
 * JavaScript Cookie v2.2.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
;(function(factory){var registeredInModuleLoader;if(typeof define==='function'&&define.amd){define(factory);registeredInModuleLoader=true;}
if(typeof exports==='object'){module.exports=factory();registeredInModuleLoader=true;}
if(!registeredInModuleLoader){var OldCookies=window.Cookies;var api=window.Cookies=factory();api.noConflict=function(){window.Cookies=OldCookies;return api;};}}(function(){function extend(){var i=0;var result={};for(;i<arguments.length;i++){var attributes=arguments[i];for(var key in attributes){result[key]=attributes[key];}}
return result;}
function decode(s){return s.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent);}
function init(converter){function api(){}
function set(key,value,attributes){if(typeof document==='undefined'){return;}
attributes=extend({path:'/'},api.defaults,attributes);if(typeof attributes.expires==='number'){attributes.expires=new Date(new Date()*1+attributes.expires*864e+5);}
attributes.expires=attributes.expires?attributes.expires.toUTCString():'';try{var result=JSON.stringify(value);if(/^[\{\[]/.test(result)){value=result;}}catch(e){}
value=converter.write?converter.write(value,key):encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent);key=encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var stringifiedAttributes='';for(var attributeName in attributes){if(!attributes[attributeName]){continue;}
stringifiedAttributes+='; '+attributeName;if(attributes[attributeName]===true){continue;}
stringifiedAttributes+='='+attributes[attributeName].split(';')[0];}
return(document.cookie=key+'='+value+stringifiedAttributes);}
function get(key,json){if(typeof document==='undefined'){return;}
var jar={};var cookies=document.cookie?document.cookie.split('; '):[];var i=0;for(;i<cookies.length;i++){var parts=cookies[i].split('=');var cookie=parts.slice(1).join('=');if(!json&&cookie.charAt(0)==='"'){cookie=cookie.slice(1,-1);}
try{var name=decode(parts[0]);cookie=(converter.read||converter)(cookie,name)||decode(cookie);if(json){try{cookie=JSON.parse(cookie);}catch(e){}}
jar[name]=cookie;if(key===name){break;}}catch(e){}}
return key?jar[key]:jar;}
api.set=set;api.get=function(key){return get(key,false);};api.getJSON=function(key){return get(key,true);};api.remove=function(key,attributes){set(key,'',extend(attributes,{expires:-1}));};api.defaults={};api.withConverter=init;return api;}
return init(function(){});}));;(function(){var $,win;$=this.jQuery||window.jQuery;win=$(window);$.fn.stick_in_parent=function(opts){var doc,elm,enable_bottoming,fn,i,inner_scrolling,len,manual_spacer,offset_top,parent_selector,recalc_every,sticky_class;if(opts==null){opts={}}
sticky_class=opts.sticky_class,inner_scrolling=opts.inner_scrolling,recalc_every=opts.recalc_every,parent_selector=opts.parent,offset_top=opts.offset_top,manual_spacer=opts.spacer,enable_bottoming=opts.bottoming;if(offset_top==null){offset_top=0}
if(parent_selector==null){parent_selector=void 0}
if(inner_scrolling==null){inner_scrolling=!0}
if(sticky_class==null){sticky_class="is_stuck"}
doc=$(document);if(enable_bottoming==null){enable_bottoming=!0}
fn=function(elm,padding_bottom,parent_top,parent_height,top,height,el_float,detached){var bottomed,detach,fixed,last_pos,last_scroll_height,offset,parent,recalc,recalc_and_tick,recalc_counter,spacer,tick;if(elm.data("sticky_kit")){return}
elm.data("sticky_kit",!0);last_scroll_height=doc.height();parent=elm.parent();if(parent_selector!=null){parent=parent.closest(parent_selector)}
if(!parent.length){throw"failed to find stick parent"}
fixed=!1;bottomed=!1;spacer=manual_spacer!=null?manual_spacer&&elm.closest(manual_spacer):$("<div />");recalc=function(){var border_top,padding_top,restore;if(detached){return}
last_scroll_height=doc.height();border_top=parseInt(parent.css("border-top-width"),10);padding_top=parseInt(parent.css("padding-top"),10);padding_bottom=parseInt(parent.css("padding-bottom"),10);parent_top=parent.offset().top+border_top+padding_top;parent_height=parent.height();if(fixed){fixed=!1;bottomed=!1;if(manual_spacer==null){elm.insertAfter(spacer);spacer.detach()}
elm.css({position:"",top:"",width:"",bottom:""}).removeClass(sticky_class);restore=!0}
top=elm.offset().top-(parseInt(elm.css("margin-top"),10)||0)-offset_top;height=elm.outerHeight(!0);el_float=elm.css("float");if(spacer){spacer.css({width:elm.outerWidth(!0),height:height,display:elm.css("display"),"vertical-align":elm.css("vertical-align"),"float":el_float})}
if(restore){return tick()}};recalc();if(height===parent_height){return}
last_pos=void 0;offset=offset_top;recalc_counter=recalc_every;tick=function(){var css,delta,recalced,scroll,will_bottom,win_height;if(detached){return}
recalced=!1;if(recalc_counter!=null){recalc_counter-=1;if(recalc_counter<=0){recalc_counter=recalc_every;recalc();recalced=!0}}
if(!recalced&&doc.height()!==last_scroll_height){recalc();recalced=!0}
scroll=win.scrollTop();if(last_pos!=null){delta=scroll-last_pos}
last_pos=scroll;if(fixed){if(enable_bottoming){will_bottom=scroll+height+offset>parent_height+parent_top;if(bottomed&&!will_bottom){bottomed=!1;elm.css({position:"fixed",bottom:"",top:offset}).trigger("sticky_kit:unbottom")}}
if(scroll<top){fixed=!1;offset=offset_top;if(manual_spacer==null){if(el_float==="left"||el_float==="right"){elm.insertAfter(spacer)}
spacer.detach()}
css={position:"",width:"",top:""};elm.css(css).removeClass(sticky_class).trigger("sticky_kit:unstick")}
if(inner_scrolling){win_height=win.height();if(height+offset_top>win_height){if(!bottomed){offset-=delta;offset=Math.max(win_height-height,offset);offset=Math.min(offset_top,offset);if(fixed){elm.css({top:offset+"px"})}}}}}else{if(scroll>top){fixed=!0;css={position:"fixed",top:offset};css.width=elm.css("box-sizing")==="border-box"?elm.outerWidth()+"px":elm.width()+"px";elm.css(css).addClass(sticky_class);if(manual_spacer==null){elm.after(spacer);if(el_float==="left"||el_float==="right"){spacer.append(elm)}}
elm.trigger("sticky_kit:stick")}}
if(fixed&&enable_bottoming){if(will_bottom==null){will_bottom=scroll+height+offset>parent_height+parent_top}
if(!bottomed&&will_bottom){bottomed=!0;if(parent.css("position")==="static"){parent.css({position:"relative"})}
return elm.css({position:"absolute",bottom:padding_bottom,top:"auto"}).trigger("sticky_kit:bottom")}}};recalc_and_tick=function(){recalc();return tick()};detach=function(){detached=!0;win.off("touchmove",tick);win.off("scroll",tick);win.off("resize",recalc_and_tick);$(document.body).off("sticky_kit:recalc",recalc_and_tick);elm.off("sticky_kit:detach",detach);elm.removeData("sticky_kit");elm.css({position:"",bottom:"",top:"",width:""});parent.position("position","");if(fixed){if(manual_spacer==null){if(el_float==="left"||el_float==="right"){elm.insertAfter(spacer)}
spacer.remove()}
return elm.removeClass(sticky_class)}};win.on("touchmove",tick);win.on("scroll",tick);win.on("resize",recalc_and_tick);$(document.body).on("sticky_kit:recalc",recalc_and_tick);elm.on("sticky_kit:detach",detach);return setTimeout(tick,0)};for(i=0,len=this.length;i<len;i++){elm=this[i];fn($(elm))}
return this}}).call(this);jQuery(function($){if(typeof ezTOC!='undefined'){var affix=$('.ez-toc-widget-container.ez-toc-affix');if(0!==affix.length){var affixOffset=30;if(typeof ezTOC.scroll_offset!='undefined'){affixOffset=parseInt(ezTOC.scroll_offset)}
$(ezTOC.affixSelector).stick_in_parent({inner_scrolling:!1,offset_top:affixOffset})}
$.fn.shrinkTOCWidth=function(){$(this).css({width:'auto',display:'table'});if(/MSIE 7\./.test(navigator.userAgent))
$(this).css('width','')};var smoothScroll=parseInt(ezTOC.smooth_scroll);if(1===smoothScroll){$('a.ez-toc-link').on('click',function(){var self=$(this);var target='';var hostname=self.prop('hostname');var pathname=self.prop('pathname');var qs=self.prop('search');var hash=self.prop('hash');if(pathname.length>0){if(pathname.charAt(0)!=='/'){pathname='/'+pathname}}
if((window.location.hostname===hostname)&&(window.location.pathname===pathname)&&(window.location.search===qs)&&(hash!=='')){target='[id="'+hash.replace('#','')+'"]';if($(target).length===0){console.log('ezTOC scrollTarget Not Found: '+target);target=''}
if(typeof ezTOC.scroll_offset!='undefined'){var offset=-1*ezTOC.scroll_offset}else{var adminbar=$('#wpadminbar');if(adminbar.length>0){if(adminbar.is(':visible'))
offset=-30;else offset=0}else{offset=0}}
if(target){$.smoothScroll({scrollTarget:target,offset:offset,beforeScroll:deactivateSetActiveEzTocListElement,afterScroll:function(){setActiveEzTocListElement();activateSetActiveEzTocListElement()}})}}})}
if(typeof ezTOC.visibility_hide_by_default!='undefined'){var toc=$('ul.ez-toc-list');var toggle=$('a.ez-toc-toggle');var invert=ezTOC.visibility_hide_by_default;if(Cookies){Cookies.get('ezTOC_hidetoc')==1?toggle.data('visible',!1):toggle.data('visible',!0)}else{toggle.data('visible',!0)}
if(invert){toggle.data('visible',!1)}
if(!toggle.data('visible')){toc.hide()}
toggle.on('click',function(event){event.preventDefault();if($(this).data('visible')){$(this).data('visible',!1);if(Cookies){if(invert)
Cookies.set('ezTOC_hidetoc',null,{path:'/'});else Cookies.set('ezTOC_hidetoc','1',{expires:30,path:'/'})}
toc.hide('fast')}else{$(this).data('visible',!0);if(Cookies){if(invert)
Cookies.set('ezTOC_hidetoc','1',{expires:30,path:'/'});else Cookies.set('ezTOC_hidetoc',null,{path:'/'})}
toc.show('fast')}})}
var headings=$('span.ez-toc-section').toArray();var headingToListElementLinkMap=getHeadingToListElementLinkMap(headings);var listElementLinks=$.map(headingToListElementLinkMap,function(value,key){return value});var scrollOffset=getScrollOffset();activateSetActiveEzTocListElement();function setActiveEzTocListElement(){var activeHeading=getActiveHeading(scrollOffset,headings);if(activeHeading){var activeListElementLink=headingToListElementLinkMap[activeHeading.id];removeStyleFromNonActiveListElement(activeListElementLink,listElementLinks);setStyleForActiveListElementElement(activeListElementLink)}}
function activateSetActiveEzTocListElement(){if(headings.length>0&&$('.ez-toc-widget-container').length){$(window).on('load resize scroll',setActiveEzTocListElement)}}
function deactivateSetActiveEzTocListElement(){$(window).off('load resize scroll',setActiveEzTocListElement)}
function getEzTocListElementLinkByHeading(heading){return $('.ez-toc-widget-container .ez-toc-list a[href="#'+$(heading).attr('id')+'"]')}
function getHeadingToListElementLinkMap(headings){return headings.reduce(function(map,heading){map[heading.id]=getEzTocListElementLinkByHeading(heading);return map},{})}
function getScrollOffset(){var scrollOffset=5;if(typeof ezTOC.smooth_scroll!='undefined'&&parseInt(ezTOC.smooth_scroll)===1){scrollOffset=(typeof ezTOC.scroll_offset!='undefined')?parseInt(ezTOC.scroll_offset):30}
var adminbar=$('#wpadminbar');if(adminbar.length){scrollOffset+=adminbar.height()}
return scrollOffset}
function getActiveHeading(topOffset,headings){var scrollTop=$(window).scrollTop();var relevantOffset=scrollTop+topOffset+1;var activeHeading=headings[0];var closestHeadingAboveOffset=relevantOffset-$(activeHeading).offset().top;headings.forEach(function(section){var topOffset=relevantOffset-$(section).offset().top;if(topOffset>0&&topOffset<closestHeadingAboveOffset){closestHeadingAboveOffset=topOffset;activeHeading=section}});return activeHeading}
function removeStyleFromNonActiveListElement(activeListElementLink,listElementLinks){listElementLinks.forEach(function(listElementLink){if(activeListElementLink!==listElementLink&&listElementLink.parent().hasClass('active')){listElementLink.parent().removeClass('active')}})}
function correctActiveListElementBackgroundColorHeight(activeListElement){var listElementHeight=getListElementHeightWithoutUlChildren(activeListElement);addListElementBackgroundColorHeightStyleToHead(listElementHeight)}
function getListElementHeightWithoutUlChildren(listElement){var $listElement=$(listElement);var content=$listElement.html();$listElement.parent().append('<li id="ez-toc-height-test" class="active">'+content+'</li>');var listItem=$('#ez-toc-height-test');var height=listItem.height();listItem.remove();return height-$listElement.children('ul').first().height()}
function addListElementBackgroundColorHeightStyleToHead(listElementHeight){$('#ez-toc-active-height').remove();$('<style id="ez-toc-active-height">'+'.ez-toc-widget-container ul.ez-toc-list li.active::before {'+'height:'+listElementHeight+'px;'+'} </style>').appendTo('head')}
function setStyleForActiveListElementElement(activeListElementLink){var activeListElement=activeListElementLink.parent();if(!activeListElement.hasClass('active')){activeListElement.addClass('active')}
correctActiveListElementBackgroundColorHeight(activeListElement)}}});var tns=function(){var t=window,e=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.msRequestAnimationFrame||function(t){return setTimeout(t,16)},n=window,i=n.cancelAnimationFrame||n.mozCancelAnimationFrame||function(t){clearTimeout(t)};function a(){for(var t,e,n,i=arguments[0]||{},a=1,r=arguments.length;a<r;a++)if(null!==(t=arguments[a]))for(e in t)i!==(n=t[e])&&void 0!==n&&(i[e]=n);return i}function r(t){return["true","false"].indexOf(t)>=0?JSON.parse(t):t}function o(t,e,n,i){if(i)try{t.setItem(e,n)}catch(a){}return n}function u(){var t=document,e=t.body;return e||((e=t.createElement("body")).fake=!0),e}var l=document.documentElement;function s(t){var e="";return t.fake&&(e=l.style.overflow,t.style.background="",t.style.overflow=l.style.overflow="hidden",l.appendChild(t)),e}function c(t,e){t.fake&&(t.remove(),l.style.overflow=e,l.offsetHeight)}function f(t,e,n,i){"insertRule"in t?t.insertRule(e+"{"+n+"}",i):t.addRule(e,n,i)}function d(t){return("insertRule"in t?t.cssRules:t.rules).length}function v(t,e,n){for(var i=0,a=t.length;i<a;i++)e.call(n,t[i],i)}var p="classList"in document.createElement("_"),h=p?function(t,e){return t.classList.contains(e)}:function(t,e){return t.className.indexOf(e)>=0},m=p?function(t,e){h(t,e)||t.classList.add(e)}:function(t,e){h(t,e)||(t.className+=" "+e)},g=p?function(t,e){h(t,e)&&t.classList.remove(e)}:function(t,e){h(t,e)&&(t.className=t.className.replace(e,""))};function y(t,e){return t.hasAttribute(e)}function x(t,e){return t.getAttribute(e)}function b(t){return void 0!==t.item}function C(t,e){if(t=b(t)||t instanceof Array?t:[t],"[object Object]"===Object.prototype.toString.call(e))for(var n=t.length;n--;)for(var i in e)t[n].setAttribute(i,e[i])}function w(t,e){if(t=b(t)||t instanceof Array?t:[t],"[object Object]"===Object.prototype.toString.call(e))for(var n=t.length;n--;)for(var i=t[n].getElementsByTagName("a"),a=i.length;a--;)for(var r in e)i[a].setAttribute(r,e[r])}function M(t,e){t=b(t)||t instanceof Array?t:[t];for(var n=(e=e instanceof Array?e:[e]).length,i=t.length;i--;)for(var a=n;a--;)t[i].removeAttribute(e[a])}function T(t,e){t=b(t)||t instanceof Array?t:[t];for(var n=(e=e instanceof Array?e:[e]).length,i=t.length;i--;)for(var a=t[i].getElementsByTagName("a"),r=a.length;r--;)for(var o=n;o--;)a[r].removeAttribute(e[o])}function E(t){for(var e=[],n=0,i=t.length;n<i;n++)e.push(t[n]);return e}function A(t,e){t&&"none"!==t.style.display&&(t.style.display="none")}function N(t,e){"none"===t.style.display&&(t.style.display="")}function B(t){return"none"!==window.getComputedStyle(t).display}function L(t){if("string"==typeof t){var e=[t],n=t.charAt(0).toUpperCase()+t.substr(1);["Webkit","Moz","ms","O"].forEach((function(i){"ms"===i&&"transform"!==t||e.push(i+n)})),t=e}for(var i=document.createElement("fakeelement"),a=(t.length,0);a<t.length;a++){var r=t[a];if(void 0!==i.style[r])return r}return!1}function S(t,e){var n=!1;return/^Webkit/.test(t)?n="webkit"+e+"End":/^O/.test(t)?n="o"+e+"End":t&&(n=e.toLowerCase()+"end"),n}var D=!1;try{var H=Object.defineProperty({},"passive",{get:function(){D=!0}});window.addEventListener("test",null,H)}catch(z){}var O=!!D&&{passive:!0};function R(t,e,n){for(var i in e){var a=["touchstart","touchmove"].indexOf(i)>=0&&!n&&O;t.addEventListener(i,e[i],a)}}function k(t,e){for(var n in e){var i=["touchstart","touchmove"].indexOf(n)>=0&&O;t.removeEventListener(n,e[n],i)}}function I(){return{topics:{},on:function(t,e){this.topics[t]=this.topics[t]||[],this.topics[t].push(e)},off:function(t,e){if(this.topics[t])for(var n=0;n<this.topics[t].length;n++)if(this.topics[t][n]===e){this.topics[t].splice(n,1);break}},emit:function(t,e){e.type=t,this.topics[t]&&this.topics[t].forEach((function(n){n(e,t)}))}}}"remove"in Element.prototype||(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)});var P=function(t){t=a({container:".slider",mode:"carousel",axis:"horizontal",items:1,gutter:0,edgePadding:0,fixedWidth:!1,autoWidth:!1,viewportMax:!1,slideBy:1,center:!1,controls:!0,controlsPosition:"top",controlsText:["prev","next"],controlsContainer:!1,prevButton:!1,nextButton:!1,nav:!0,navPosition:"top",navContainer:!1,navAsThumbnails:!1,arrowKeys:!1,speed:300,autoplay:!1,autoplayPosition:"top",autoplayTimeout:5e3,autoplayDirection:"forward",autoplayText:["start","stop"],autoplayHoverPause:!1,autoplayButton:!1,autoplayButtonOutput:!0,autoplayResetOnVisibility:!0,animateIn:"tns-fadeIn",animateOut:"tns-fadeOut",animateNormal:"tns-normal",animateDelay:!1,loop:!0,rewind:!1,autoHeight:!1,responsive:!1,lazyload:!1,lazyloadSelector:".tns-lazy-img",touch:!0,mouseDrag:!1,swipeAngle:15,nested:!1,preventActionWhenRunning:!1,preventScrollOnTouch:!1,freezable:!0,onInit:!1,useLocalStorage:!0,textDirection:"ltr"},t||{});var n=document,l=window,p={ENTER:13,SPACE:32,LEFT:37,RIGHT:39},b={},D=t.useLocalStorage;if(D){var H=navigator.userAgent,O=new Date;try{(b=l.localStorage)?(b.setItem(O,O),D=b.getItem(O)==O,b.removeItem(O)):D=!1,D||(b={})}catch(z){D=!1}D&&(b.tnsApp&&b.tnsApp!==H&&["tC","tPL","tMQ","tTf","t3D","tTDu","tTDe","tADu","tADe","tTE","tAE"].forEach((function(t){b.removeItem(t)})),localStorage.tnsApp=H)}var W=b.tC?r(b.tC):o(b,"tC",function(){var t=document,e=u(),n=s(e),i=t.createElement("div"),a=!1;e.appendChild(i);try{for(var r,o="(10px * 10)",l=["calc"+o,"-moz-calc"+o,"-webkit-calc"+o],f=0;f<3;f++)if(r=l[f],i.style.width=r,100===i.offsetWidth){a=r.replace(o,"");break}}catch(z){}return e.fake?c(e,n):i.remove(),a}(),D),q=b.tPL?r(b.tPL):o(b,"tPL",function(){var t,e=document,n=u(),i=s(n),a=e.createElement("div"),r=e.createElement("div"),o="";a.className="tns-t-subp2",r.className="tns-t-ct";for(var l=0;l<70;l++)o+="<div></div>";return r.innerHTML=o,a.appendChild(r),n.appendChild(a),t=Math.abs(a.getBoundingClientRect().left-r.children[67].getBoundingClientRect().left)<2,n.fake?c(n,i):a.remove(),t}(),D),F=b.tMQ?r(b.tMQ):o(b,"tMQ",function(){var t,e=document,n=u(),i=s(n),a=e.createElement("div"),r=e.createElement("style"),o="@media all and (min-width:1px){.tns-mq-test{position:absolute}}";return r.type="text/css",a.className="tns-mq-test",n.appendChild(r),n.appendChild(a),r.styleSheet?r.styleSheet.cssText=o:r.appendChild(e.createTextNode(o)),t=window.getComputedStyle?window.getComputedStyle(a).position:a.currentStyle.position,n.fake?c(n,i):a.remove(),"absolute"===t}(),D),j=b.tTf?r(b.tTf):o(b,"tTf",L("transform"),D),V=b.t3D?r(b.t3D):o(b,"t3D",function(t){if(!t)return!1;if(!window.getComputedStyle)return!1;var e,n=document,i=u(),a=s(i),r=n.createElement("p"),o=t.length>9?"-"+t.slice(0,-9).toLowerCase()+"-":"";return o+="transform",i.insertBefore(r,null),r.style[t]="translate3d(1px,1px,1px)",e=window.getComputedStyle(r).getPropertyValue(o),i.fake?c(i,a):r.remove(),void 0!==e&&e.length>0&&"none"!==e}(j),D),G=b.tTDu?r(b.tTDu):o(b,"tTDu",L("transitionDuration"),D),Q=b.tTDe?r(b.tTDe):o(b,"tTDe",L("transitionDelay"),D),X=b.tADu?r(b.tADu):o(b,"tADu",L("animationDuration"),D),Y=b.tADe?r(b.tADe):o(b,"tADe",L("animationDelay"),D),K=b.tTE?r(b.tTE):o(b,"tTE",S(G,"Transition"),D),J=b.tAE?r(b.tAE):o(b,"tAE",S(X,"Animation"),D),U=l.console&&"function"==typeof l.console.warn,_=["container","controlsContainer","prevButton","nextButton","navContainer","autoplayButton"],Z={};if(_.forEach((function(e){if("string"==typeof t[e]){var i=t[e],a=n.querySelector(i);if(Z[e]=i,!a||!a.nodeName)return void(U&&console.warn("Can't find",t[e]));t[e]=a}})),!(t.container.children.length<1)){var $=t.responsive,tt=t.nested,et="carousel"===t.mode;if($){0 in $&&(t=a(t,$[0]),delete $[0]);var nt={};for(var it in $){var at=$[it];at="number"==typeof at?{items:at}:at,nt[it]=at}$=nt,nt=null}if(et||function t(e){for(var n in e)et||("slideBy"===n&&(e[n]="page"),"edgePadding"===n&&(e[n]=!1),"autoHeight"===n&&(e[n]=!1)),"responsive"===n&&t(e[n])}(t),!et){t.axis="horizontal",t.slideBy="page",t.edgePadding=!1;var rt=t.animateIn,ot=t.animateOut,ut=t.animateDelay,lt=t.animateNormal}var st,ct,ft="horizontal"===t.axis,dt=n.createElement("div"),vt=n.createElement("div"),pt=t.container,ht=pt.parentNode,mt=pt.outerHTML,gt=pt.children,yt=gt.length,xt=kn(),bt=!1;$&&ni(),et&&(pt.className+=" tns-vpfix");var Ct,wt,Mt,Tt,Et,At,Nt,Bt,Lt=t.autoWidth,St=qn("fixedWidth"),Dt=qn("edgePadding"),Ht=qn("gutter"),Ot=zn(),Rt=qn("center"),kt=Lt?1:Math.floor(qn("items")),It=qn("slideBy"),Pt=t.viewportMax||t.fixedWidthViewportWidth,zt=qn("arrowKeys"),Wt=qn("speed"),qt=t.rewind,Ft=!qt&&t.loop,jt=qn("autoHeight"),Vt=qn("controls"),Gt=qn("controlsText"),Qt=qn("textDirection"),Xt=qn("nav"),Yt=qn("touch"),Kt=qn("mouseDrag"),Jt=qn("autoplay"),Ut=qn("autoplayTimeout"),_t=qn("autoplayText"),Zt=qn("autoplayHoverPause"),$t=qn("autoplayResetOnVisibility"),te=(Bt=document.createElement("style"),Nt&&Bt.setAttribute("media",Nt),document.querySelector("head").appendChild(Bt),Bt.sheet?Bt.sheet:Bt.styleSheet),ee=t.lazyload,ne=t.lazyloadSelector,ie=[],ae=Ft?(Et=function(){if(Lt||St&&!Pt)return yt-1;var e=St?"fixedWidth":"items",n=[];if((St||t[e]<yt)&&n.push(t[e]),$)for(var i in $){var a=$[i][e];a&&(St||a<yt)&&n.push(a)}return n.length||n.push(0),Math.ceil(St?Pt/Math.min.apply(null,n):Math.max.apply(null,n))}(),At=et?Math.ceil((5*Et-yt)/2):4*Et-yt,At=Math.max(Et,At),Wn("edgePadding")?At+1:At):0,re=et?yt+2*ae:yt+ae,oe=!(!St&&!Lt||Ft),ue=St?Bi():null,le=!et||!Ft,se=ft?"left":"top",ce="",fe="",de=St?function(){return Rt&&!Ft?yt-1:Math.ceil(-ue/(St+Ht))}:Lt?function(){for(var t=re;t--;)if(Ct[t]>=-ue)return t}:function(){return Rt&&et&&!Ft?yt-1:Ft||et?Math.max(0,re-Math.ceil(kt)):re-1},ve=Hn(qn("startIndex")),pe=ve,he=(Dn(),0),me=Lt?null:de(),ge=t.preventActionWhenRunning,ye=t.swipeAngle,xe=!ye||"?",be=!1,Ce=t.onInit,we=new I,Me=" tns-slider tns-"+t.mode,Te=pt.id||(Tt=window.tnsId,window.tnsId=Tt?Tt+1:1,"tns"+window.tnsId),Ee=qn("disable"),Ae=!1,Ne=t.freezable,Be=!(!Ne||Lt)&&ei(),Le=!1,Se={click:Pi,keydown:function(t){t=Qi(t);var e=[p.LEFT,p.RIGHT].indexOf(t.keyCode);e>=0&&(0===e?_e.disabled||Pi(t,-1):Ze.disabled||Pi(t,1))}},De={click:function(t){if(be){if(ge)return;ki()}var e=Xi(t=Qi(t));for(;e!==nn&&!y(e,"data-nav");)e=e.parentNode;if(y(e,"data-nav")){var n=un=Number(x(e,"data-nav")),i=St||Lt?n*yt/rn:n*kt;Ii(We?n:Math.min(Math.ceil(i),yt-1),t),ln===n&&(pn&&ji(),un=-1)}},keydown:function(t){t=Qi(t);var e=n.activeElement;if(!y(e,"data-nav"))return;var i=[p.LEFT,p.RIGHT,p.ENTER,p.SPACE].indexOf(t.keyCode),a=Number(x(e,"data-nav"));i>=0&&(0===i?a>0&&Gi(en[a-1]):1===i?a<rn-1&&Gi(en[a+1]):(un=a,Ii(a,t)))}},He={mouseover:function(){pn&&(Wi(),hn=!0)},mouseout:function(){hn&&(zi(),hn=!1)}},Oe={visibilitychange:function(){n.hidden?pn&&(Wi(),gn=!0):gn&&(zi(),gn=!1)}},Re={keydown:function(t){t=Qi(t);var e=[p.LEFT,p.RIGHT].indexOf(t.keyCode);e>=0&&Pi(t,0===e?-1:1)}},ke={touchstart:Ui,touchmove:_i,touchend:$i,touchcancel:$i},Ie={mousedown:Ui,mousemove:_i,mouseup:$i,mouseleave:$i},Pe=Wn("controls"),ze=Wn("nav"),We=!!Lt||t.navAsThumbnails,qe=Wn("autoplay"),Fe=Wn("touch"),je=Wn("mouseDrag"),Ve="tns-slide-active",Ge="tns-complete",Qe={load:function(t){fi(Xi(t))},error:function(t){e=Xi(t),m(e,"failed"),di(e);var e}},Xe="force"===t.preventScrollOnTouch;if(Pe)var Ye,Ke,Je=t.controlsContainer,Ue=t.controlsContainer?t.controlsContainer.outerHTML:"",_e=t.prevButton,Ze=t.nextButton,$e=t.prevButton?t.prevButton.outerHTML:"",tn=t.nextButton?t.nextButton.outerHTML:"";if(ze)var en,nn=t.navContainer,an=t.navContainer?t.navContainer.outerHTML:"",rn=Lt?yt:ea(),on=0,un=-1,ln=Rn(),sn=ln,cn="tns-nav-active",fn="Carousel Page ",dn=" (Current Slide)";if(qe)var vn,pn,hn,mn,gn,yn="forward"===t.autoplayDirection?1:-1,xn=t.autoplayButton,bn=t.autoplayButton?t.autoplayButton.outerHTML:"",Cn=["<span class='tns-visually-hidden'>"," animation</span>"];if(Fe||je)var wn,Mn,Tn={},En={},An=!1,Nn=ft?function(t,e){return t.x-e.x}:function(t,e){return t.y-e.y};Lt||Sn(Ee||Be),j&&(se=j,ce="translate",V?(ce+=ft?"3d(":"3d(0px, ",fe=ft?", 0px, 0px)":", 0px)"):(ce+=ft?"X(":"Y(",fe=")")),et&&(pt.className=pt.className.replace("tns-vpfix","")),function(){Wn("gutter");dt.className="tns-outer",vt.className="tns-inner",dt.id=Te+"-ow",vt.id=Te+"-iw",""===pt.id&&(pt.id=Te);Me+=q||Lt?" tns-subpixel":" tns-no-subpixel",Me+=W?" tns-calc":" tns-no-calc",Lt&&(Me+=" tns-autowidth");Me+=" tns-"+t.axis,pt.className+=Me,et?((st=n.createElement("div")).id=Te+"-mw",st.className="tns-ovh",dt.appendChild(st),st.appendChild(vt)):dt.appendChild(vt);if(jt){(st||vt).className+=" tns-ah"}if(ht.insertBefore(dt,pt),vt.appendChild(pt),v(gt,(function(t,e){m(t,"tns-item"),t.id||(t.id=Te+"-item"+e),!et&&lt&&m(t,lt),C(t,{"aria-hidden":"true",tabindex:"-1"}),w(t,{tabindex:"-1"})})),ae){for(var e=n.createDocumentFragment(),i=n.createDocumentFragment(),a=ae;a--;){var r=a%yt,o=gt[r].cloneNode(!0);if(M(o,"id"),i.insertBefore(o,i.firstChild),et){var u=gt[yt-1-r].cloneNode(!0);M(u,"id"),e.appendChild(u)}}pt.insertBefore(e,pt.firstChild),pt.appendChild(i),gt=pt.children}}(),function(){if(!et)for(var e=ve,n=ve+Math.min(yt,kt);e<n;e++){var i=gt[e];i.style.left=100*(e-ve)/kt+"%",m(i,rt),g(i,lt)}ft&&(q||Lt?(f(te,"#"+Te+" > .tns-item","font-size:"+l.getComputedStyle(gt[0]).fontSize+";",d(te)),f(te,"#"+Te,"font-size:0;",d(te))):et&&v(gt,(function(t,e){t.style.marginLeft=function(t){return W?W+"("+100*t+"% / "+re+")":100*t/re+"%"}(e)})));if(F){if(G){var a=st&&t.autoHeight?Xn(t.speed):"";f(te,"#"+Te+"-mw",a,d(te))}a=Fn(t.edgePadding,t.gutter,t.fixedWidth,t.speed,t.autoHeight),f(te,"#"+Te+"-iw",a,d(te)),et&&(a=ft&&!Lt?"width:"+jn(t.fixedWidth,t.gutter,t.items)+";":"",G&&(a+=Xn(Wt)),f(te,"#"+Te,a,d(te))),a=ft&&!Lt?Vn(t.fixedWidth,t.gutter,t.items):"",t.gutter&&(a+=Gn(t.gutter)),et||(G&&(a+=Xn(Wt)),X&&(a+=Yn(Wt))),a&&f(te,"#"+Te+" > .tns-item",a,d(te))}else{et&&jt&&(st.style[G]=Wt/1e3+"s"),vt.style.cssText=Fn(Dt,Ht,St,jt),et&&ft&&!Lt&&(pt.style.width=jn(St,Ht,kt));a=ft&&!Lt?Vn(St,Ht,kt):"";Ht&&(a+=Gn(Ht)),a&&f(te,"#"+Te+" > .tns-item",a,d(te))}if($&&F)for(var r in $){r=parseInt(r);var o=$[r],u=(a="",""),s="",c="",p="",h=Lt?null:qn("items",r),y=qn("fixedWidth",r),x=qn("speed",r),b=qn("edgePadding",r),C=qn("autoHeight",r),w=qn("gutter",r);G&&st&&qn("autoHeight",r)&&"speed"in o&&(u="#"+Te+"-mw{"+Xn(x)+"}"),("edgePadding"in o||"gutter"in o)&&(s="#"+Te+"-iw{"+Fn(b,w,y,x,C)+"}"),et&&ft&&!Lt&&("fixedWidth"in o||"items"in o||St&&"gutter"in o)&&(c="width:"+jn(y,w,h)+";"),G&&"speed"in o&&(c+=Xn(x)),c&&(c="#"+Te+"{"+c+"}"),("fixedWidth"in o||St&&"gutter"in o||!et&&"items"in o)&&(p+=Vn(y,w,h)),"gutter"in o&&(p+=Gn(w)),!et&&"speed"in o&&(G&&(p+=Xn(x)),X&&(p+=Yn(x))),p&&(p="#"+Te+" > .tns-item{"+p+"}"),(a=u+s+c+p)&&te.insertRule("@media (min-width: "+r/16+"em) {"+a+"}",te.cssRules.length)}}(),Kn();var Bn=Ft?et?function(){var t=he,e=me;t+=It,e-=It,Dt?(t+=1,e-=1):St&&(Ot+Ht)%(St+Ht)&&(e-=1),ae&&(ve>e?ve-=yt:ve<t&&(ve+=yt))}:function(){if(ve>me)for(;ve>=he+yt;)ve-=yt;else if(ve<he)for(;ve<=me-yt;)ve+=yt}:function(){ve=Math.max(he,Math.min(me,ve))},Ln=et?function(){var t,e,n,i,a,r,o,u,l,s,c;Ai(pt,""),G||!Wt?(Di(),Wt&&B(pt)||ki()):(t=pt,e=se,n=ce,i=fe,a=Li(),r=Wt,o=ki,u=Math.min(r,10),l=a.indexOf("%")>=0?"%":"px",a=a.replace(l,""),s=Number(t.style[e].replace(n,"").replace(i,"").replace(l,"")),c=(a-s)/r*u,setTimeout((function a(){r-=u,s+=c,t.style[e]=n+s+l+i,r>0?setTimeout(a,u):o()}),u)),ft||ta()}:function(){ie=[];var t={};t[K]=t[J]=ki,k(gt[pe],t),R(gt[ve],t),Hi(pe,rt,ot,!0),Hi(ve,lt,rt),K&&J&&Wt&&B(pt)||ki()};return{version:"2.9.2",getInfo:ia,events:we,goTo:Ii,play:function(){Jt&&!pn&&(Fi(),mn=!1)},pause:function(){pn&&(ji(),mn=!0)},isOn:bt,updateSliderHeight:yi,refresh:Kn,destroy:function(){if(te.disabled=!0,te.ownerNode&&te.ownerNode.remove(),k(l,{resize:$n}),zt&&k(n,Re),Je&&k(Je,Se),nn&&k(nn,De),k(pt,He),k(pt,Oe),xn&&k(xn,{click:Vi}),Jt&&clearInterval(vn),et&&K){var e={};e[K]=ki,k(pt,e)}Yt&&k(pt,ke),Kt&&k(pt,Ie);var i=[mt,Ue,$e,tn,an,bn];for(var a in _.forEach((function(e,n){var a="container"===e?dt:t[e];if("object"==typeof a&&a){var r=!!a.previousElementSibling&&a.previousElementSibling,o=a.parentNode;a.outerHTML=i[n],t[e]=r?r.nextElementSibling:o.firstElementChild}})),_=rt=ot=ut=lt=ft=dt=vt=pt=ht=mt=gt=yt=ct=xt=Lt=St=Dt=Ht=Ot=kt=It=Pt=zt=Wt=qt=Ft=jt=te=ee=Ct=ie=ae=re=oe=ue=le=se=ce=fe=de=ve=pe=he=me=ye=xe=be=Ce=we=Me=Te=Ee=Ae=Ne=Be=Le=Se=De=He=Oe=Re=ke=Ie=Pe=ze=We=qe=Fe=je=Ve=Ge=Qe=wt=Vt=Gt=Je=Ue=_e=Ze=Ye=Ke=Xt=nn=an=en=rn=on=un=ln=sn=cn=fn=dn=Jt=Ut=yn=_t=Zt=xn=bn=$t=Cn=vn=pn=hn=mn=gn=Tn=En=wn=An=Mn=Nn=Yt=Kt=null,this)"rebuild"!==a&&(this[a]=null);bt=!1},rebuild:function(){return P(a(t,Z))}}}function Sn(t){t&&(Vt=Xt=Yt=Kt=zt=Jt=Zt=$t=!1)}function Dn(){for(var t=et?ve-ae:ve;t<0;)t+=yt;return t%yt+1}function Hn(t){return t=t?Math.max(0,Math.min(Ft?yt-1:yt-kt,t)):0,et?t+ae:t}function On(t){for(null==t&&(t=ve),et&&(t-=ae);t<0;)t+=yt;return Math.floor(t%yt)}function Rn(){var t,e=On();return t=We?e:St||Lt?Math.ceil((e+1)*rn/yt-1):Math.floor(e/kt),!Ft&&et&&ve===me&&(t=rn-1),t}function kn(){return l.innerWidth||n.documentElement.clientWidth||n.body.clientWidth}function In(t){return"top"===t?"afterbegin":"beforeend"}function Pn(t){if(null!=t){var e,i,a=n.createElement("div");return t.appendChild(a),i=(e=a.getBoundingClientRect()).right-e.left,a.remove(),i||Pn(t.parentNode)}}function zn(){var t=Dt?2*Dt-Ht:0;return Pn(ht)-t}function Wn(e){if(t[e])return!0;if($)for(var n in $)if($[n][e])return!0;return!1}function qn(e,n){if(null==n&&(n=xt),"items"===e&&St)return Math.floor((Ot+Ht)/(St+Ht))||1;var i=t[e];if($)for(var a in $)n>=parseInt(a)&&e in $[a]&&(i=$[a][e]);return"slideBy"===e&&"page"===i&&(i=qn("items")),et||"slideBy"!==e&&"items"!==e||(i=Math.floor(i)),i}function Fn(t,e,n,i,a){var r="";if(void 0!==t){var o=t;e&&(o-=e),r=ft?"margin: 0 "+o+"px 0 "+t+"px;":"margin: "+t+"px 0 "+o+"px 0;"}else if(e&&!n){var u="-"+e+"px";r="margin: 0 "+(ft?u+" 0 0":"0 "+u+" 0")+";"}return!et&&a&&G&&i&&(r+=Xn(i)),r}function jn(t,e,n){return t?(t+e)*re+"px":W?W+"("+100*re+"% / "+n+")":100*re/n+"%"}function Vn(t,e,n){var i;if(t)i=t+e+"px";else{et||(n=Math.floor(n));var a=et?re:n;i=W?W+"(100% / "+a+")":100/a+"%"}return i="width:"+i,"inner"!==tt?i+";":i+" !important;"}function Gn(t){var e="";!1!==t&&(e=(ft?"padding-":"margin-")+(ft?"right":"bottom")+": "+t+"px;");return e}function Qn(t,e){var n=t.substring(0,t.length-e).toLowerCase();return n&&(n="-"+n+"-"),n}function Xn(t){return Qn(G,18)+"transition-duration:"+t/1e3+"s;"}function Yn(t){return Qn(X,17)+"animation-duration:"+t/1e3+"s;"}function Kn(){if(Wn("autoHeight")||Lt||!ft){var t=pt.querySelectorAll("img");v(t,(function(t){var e=t.src;ee||(e&&e.indexOf("data:image")<0?(t.src="",R(t,Qe),m(t,"loading"),t.src=e):fi(t))})),e((function(){hi(E(t),(function(){wt=!0}))})),Wn("autoHeight")&&(t=vi(ve,Math.min(ve+kt-1,re-1))),ee?Jn():e((function(){hi(E(t),Jn)}))}else et&&Si(),_n(),Zn()}function Jn(){if(Lt){var t=Ft?ve:yt-1;!function e(){var n=gt[t].getBoundingClientRect().left,i=gt[t-1].getBoundingClientRect().right;Math.abs(n-i)<=1?Un():setTimeout((function(){e()}),16)}()}else Un()}function Un(){ft&&!Lt||(xi(),Lt?(ue=Bi(),Ne&&(Be=ei()),me=de(),Sn(Ee||Be)):ta()),et&&Si(),_n(),Zn()}function _n(){if(bi(),dt.insertAdjacentHTML("afterbegin",'<div class="tns-liveregion tns-visually-hidden" aria-live="polite" aria-atomic="true">slide <span class="current">'+li()+"</span>  of "+yt+"</div>"),Mt=dt.querySelector(".tns-liveregion .current"),qe){var e=Jt?"stop":"start";xn?C(xn,{"data-action":e}):t.autoplayButtonOutput&&(dt.insertAdjacentHTML(In(t.autoplayPosition),'<button type="button" data-action="'+e+'">'+Cn[0]+e+Cn[1]+_t[0]+"</button>"),xn=dt.querySelector("[data-action]")),xn&&R(xn,{click:Vi}),Jt&&(Fi(),Zt&&R(pt,He),$t&&R(pt,Oe))}if(ze){if(nn)C(nn,{"aria-label":"Carousel Pagination"}),v(en=nn.children,(function(t,e){C(t,{"data-nav":e,tabindex:"-1","aria-label":fn+(e+1),"aria-controls":Te})}));else{for(var n="",i=We?"":'style="display:none"',a=0;a<yt;a++)n+='<button type="button" data-nav="'+a+'" tabindex="-1" aria-controls="'+Te+'" '+i+' aria-label="'+fn+(a+1)+'"></button>';n='<div class="tns-nav" aria-label="Carousel Pagination">'+n+"</div>",dt.insertAdjacentHTML(In(t.navPosition),n),nn=dt.querySelector(".tns-nav"),en=nn.children}if(na(),G){var r=G.substring(0,G.length-18).toLowerCase(),o="transition: all "+Wt/1e3+"s";r&&(o="-"+r+"-"+o),f(te,"[aria-controls^="+Te+"-item]",o,d(te))}C(en[ln],{"aria-label":fn+(ln+1)+dn}),M(en[ln],"tabindex"),m(en[ln],cn),R(nn,De)}Pe&&(Je||_e&&Ze||(dt.insertAdjacentHTML(In(t.controlsPosition),'<div class="tns-controls" aria-label="Carousel Navigation" tabindex="0"><button type="button" data-controls="prev" tabindex="-1" aria-controls="'+Te+'">'+Gt[0]+'</button><button type="button" data-controls="next" tabindex="-1" aria-controls="'+Te+'">'+Gt[1]+"</button></div>"),Je=dt.querySelector(".tns-controls")),_e&&Ze||(_e=Je.children[0],Ze=Je.children[1]),t.controlsContainer&&C(Je,{"aria-label":"Carousel Navigation",tabindex:"0"}),(t.controlsContainer||t.prevButton&&t.nextButton)&&C([_e,Ze],{"aria-controls":Te,tabindex:"-1"}),(t.controlsContainer||t.prevButton&&t.nextButton)&&(C(_e,{"data-controls":"prev"}),C(Ze,{"data-controls":"next"})),Ye=wi(_e),Ke=wi(Ze),Ei(),Je?R(Je,Se):(R(_e,Se),R(Ze,Se))),ii()}function Zn(){if(et&&K){var e={};e[K]=ki,R(pt,e)}Yt&&R(pt,ke,t.preventScrollOnTouch),Kt&&R(pt,Ie),zt&&R(n,Re),"inner"===tt?we.on("outerResized",(function(){ti(),we.emit("innerLoaded",ia())})):($||St||Lt||jt||!ft)&&R(l,{resize:$n}),jt&&("outer"===tt?we.on("innerLoaded",pi):Ee||pi()),ci(),Ee?oi():Be&&ri(),we.on("indexChanged",mi),"inner"===tt&&we.emit("innerLoaded",ia()),"function"==typeof Ce&&Ce(ia()),bt=!0}function $n(t){e((function(){ti(Qi(t))}))}function ti(e){if(bt){"outer"===tt&&we.emit("outerResized",ia(e)),xt=kn();var i,a=ct,r=!1;$&&(ni(),(i=a!==ct)&&we.emit("newBreakpointStart",ia(e)));var o,u,l=kt,s=Ee,c=Be,p=zt,h=Vt,y=Xt,x=Yt,b=Kt,C=Jt,w=Zt,M=$t,T=ve;if(i){var E=St,B=jt,L=Gt,S=Rt,D=_t;if(!F)var H=Ht,O=Dt}if(zt=qn("arrowKeys"),Vt=qn("controls"),Xt=qn("nav"),Yt=qn("touch"),Rt=qn("center"),Kt=qn("mouseDrag"),Jt=qn("autoplay"),Zt=qn("autoplayHoverPause"),$t=qn("autoplayResetOnVisibility"),i&&(Ee=qn("disable"),St=qn("fixedWidth"),Wt=qn("speed"),jt=qn("autoHeight"),Gt=qn("controlsText"),_t=qn("autoplayText"),Ut=qn("autoplayTimeout"),F||(Dt=qn("edgePadding"),Ht=qn("gutter"))),Sn(Ee),Ot=zn(),ft&&!Lt||Ee||(xi(),ft||(ta(),r=!0)),(St||Lt)&&(ue=Bi(),me=de()),(i||St)&&(kt=qn("items"),It=qn("slideBy"),(u=kt!==l)&&(St||Lt||(me=de()),Bn())),i&&Ee!==s&&(Ee?oi():function(){if(!Ae)return;if(te.disabled=!1,pt.className+=Me,Si(),Ft)for(var t=ae;t--;)et&&N(gt[t]),N(gt[re-t-1]);if(!et)for(var e=ve,n=ve+yt;e<n;e++){var i=gt[e],a=e<ve+kt?rt:lt;i.style.left=100*(e-ve)/kt+"%",m(i,a)}ai(),Ae=!1}()),Ne&&(i||St||Lt)&&(Be=ei())!==c&&(Be?(Di(Li(Hn(0))),ri()):(!function(){if(!Le)return;Dt&&F&&(vt.style.margin="");if(ae)for(var t="tns-transparent",e=ae;e--;)et&&g(gt[e],t),g(gt[re-e-1],t);ai(),Le=!1}(),r=!0)),Sn(Ee||Be),Jt||(Zt=$t=!1),zt!==p&&(zt?R(n,Re):k(n,Re)),Vt!==h&&(Vt?Je?N(Je):(_e&&N(_e),Ze&&N(Ze)):Je?A(Je):(_e&&A(_e),Ze&&A(Ze))),Xt!==y&&(Xt?N(nn):A(nn)),Yt!==x&&(Yt?R(pt,ke,t.preventScrollOnTouch):k(pt,ke)),Kt!==b&&(Kt?R(pt,Ie):k(pt,Ie)),Jt!==C&&(Jt?(xn&&N(xn),pn||mn||Fi()):(xn&&A(xn),pn&&ji())),Zt!==w&&(Zt?R(pt,He):k(pt,He)),$t!==M&&($t?R(n,Oe):k(n,Oe)),i){if(St===E&&Rt===S||(r=!0),jt!==B&&(jt||(vt.style.height="")),Vt&&Gt!==L&&(_e.innerHTML=Gt[0],Ze.innerHTML=Gt[1]),xn&&_t!==D){var I=Jt?1:0,P=xn.innerHTML,z=P.length-D[I].length;P.substring(z)===D[I]&&(xn.innerHTML=P.substring(0,z)+_t[I])}}else Rt&&(St||Lt)&&(r=!0);if((u||St&&!Lt)&&(rn=ea(),na()),(o=ve!==T)?(we.emit("indexChanged",ia()),r=!0):u?o||mi():(St||Lt)&&(ci(),bi(),ui()),u&&!et&&function(){for(var t=ve+Math.min(yt,kt),e=re;e--;){var n=gt[e];e>=ve&&e<t?(m(n,"tns-moving"),n.style.left=100*(e-ve)/kt+"%",m(n,rt),g(n,lt)):n.style.left&&(n.style.left="",m(n,lt),g(n,rt)),g(n,ot)}setTimeout((function(){v(gt,(function(t){g(t,"tns-moving")}))}),300)}(),!Ee&&!Be){if(i&&!F&&(Dt===O&&Ht===H||(vt.style.cssText=Fn(Dt,Ht,St,Wt,jt)),ft)){et&&(pt.style.width=jn(St,Ht,kt));var W=Vn(St,Ht,kt)+Gn(Ht);!function(t,e){"deleteRule"in t?t.deleteRule(e):t.removeRule(e)}(te,d(te)-1),f(te,"#"+Te+" > .tns-item",W,d(te))}jt&&pi(),r&&(Si(),pe=ve)}i&&we.emit("newBreakpointEnd",ia(e))}}function ei(){if(!St&&!Lt)return yt<=(Rt?kt-(kt-1)/2:kt);var t=St?(St+Ht)*yt:Ct[yt],e=Dt?Ot+2*Dt:Ot+Ht;return Rt&&(e-=St?(Ot-St)/2:(Ot-(Ct[ve+1]-Ct[ve]-Ht))/2),t<=e}function ni(){for(var t in ct=0,$)t=parseInt(t),xt>=t&&(ct=t)}function ii(){!Jt&&xn&&A(xn),!Xt&&nn&&A(nn),Vt||(Je?A(Je):(_e&&A(_e),Ze&&A(Ze)))}function ai(){Jt&&xn&&N(xn),Xt&&nn&&N(nn),Vt&&(Je?N(Je):(_e&&N(_e),Ze&&N(Ze)))}function ri(){if(!Le){if(Dt&&(vt.style.margin="0px"),ae)for(var t="tns-transparent",e=ae;e--;)et&&m(gt[e],t),m(gt[re-e-1],t);ii(),Le=!0}}function oi(){if(!Ae){if(te.disabled=!0,pt.className=pt.className.replace(Me.substring(1),""),M(pt,["style"]),Ft)for(var t=ae;t--;)et&&A(gt[t]),A(gt[re-t-1]);if(ft&&et||M(vt,["style"]),!et)for(var e=ve,n=ve+yt;e<n;e++){var i=gt[e];M(i,["style"]),g(i,rt),g(i,lt)}ii(),Ae=!0}}function ui(){var t=li();Mt.innerHTML!==t&&(Mt.innerHTML=t)}function li(){var t=si(),e=t[0]+1,n=t[1]+1;return e===n?e+"":e+" to "+n}function si(t){null==t&&(t=Li());var e,n,i,a=ve;if(Rt||Dt?(Lt||St)&&(n=-(parseFloat(t)+Dt),i=n+Ot+2*Dt):Lt&&(n=Ct[ve],i=n+Ot),Lt)Ct.forEach((function(t,r){r<re&&((Rt||Dt)&&t<=n+.5&&(a=r),i-t>=.5&&(e=r))}));else{if(St){var r=St+Ht;Rt||Dt?(a=Math.floor(n/r),e=Math.ceil(i/r-1)):e=a+Math.ceil(Ot/r)-1}else if(Rt||Dt){var o=kt-1;if(Rt?(a-=o/2,e=ve+o/2):e=ve+o,Dt){var u=Dt*kt/Ot;a-=u,e+=u}a=Math.floor(a),e=Math.ceil(e)}else e=a+kt-1;a=Math.max(a,0),e=Math.min(e,re-1)}return[a,e]}function ci(){if(ee&&!Ee){var t=si();t.push(ne),vi.apply(null,t).forEach((function(t){if(!h(t,Ge)){var e={};e[K]=function(t){t.stopPropagation()},R(t,e),R(t,Qe),t.src=x(t,"data-src");var n=x(t,"data-srcset");n&&(t.srcset=n),m(t,"loading")}}))}}function fi(t){m(t,"loaded"),di(t)}function di(t){m(t,Ge),g(t,"loading"),k(t,Qe)}function vi(t,e,n){var i=[];for(n||(n="img");t<=e;)v(gt[t].querySelectorAll(n),(function(t){i.push(t)})),t++;return i}function pi(){var t=vi.apply(null,si());e((function(){hi(t,yi)}))}function hi(t,n){return wt?n():(t.forEach((function(e,n){!ee&&e.complete&&di(e),h(e,Ge)&&t.splice(n,1)})),t.length?void e((function(){hi(t,n)})):n())}function mi(){ci(),bi(),ui(),Ei(),function(){if(Xt&&(ln=un>=0?un:Rn(),un=-1,ln!==sn)){var t=en[sn],e=en[ln];C(t,{tabindex:"-1","aria-label":fn+(sn+1)}),w(t,{tabindex:"-1"}),g(t,cn),C(e,{"aria-label":fn+(ln+1)+dn}),M(e,"tabindex"),T(e,"tabindex"),m(e,cn),sn=ln}}()}function gi(t,e){for(var n=[],i=t,a=Math.min(t+e,re);i<a;i++)n.push(gt[i].offsetHeight);return Math.max.apply(null,n)}function yi(){var t=jt?gi(ve,kt):gi(ae,yt),e=st||vt;e.style.height!==t&&(e.style.height=t+"px")}function xi(){Ct=[0];var t=ft?"left":"top",e=ft?"right":"bottom",n=gt[0].getBoundingClientRect()[t];v(gt,(function(i,a){a&&Ct.push(i.getBoundingClientRect()[t]-n),a===re-1&&Ct.push(i.getBoundingClientRect()[e]-n)}))}function bi(){var t=si(),e=t[0],n=t[1];v(gt,(function(t,i){i>=e&&i<=n?y(t,"aria-hidden")&&(M(t,["aria-hidden","tabindex"]),m(t,Ve),T(t,["tabindex"])):y(t,"aria-hidden")||(C(t,{"aria-hidden":"true",tabindex:"-1"}),w(t,{tabindex:"-1"}),g(t,Ve))}))}function Ci(t){return t.nodeName.toLowerCase()}function wi(t){return"button"===Ci(t)}function Mi(t){return"true"===t.getAttribute("aria-disabled")}function Ti(t,e,n){t?e.disabled=n:e.setAttribute("aria-disabled",n.toString())}function Ei(){if(Vt&&!qt&&!Ft){var t=Ye?_e.disabled:Mi(_e),e=Ke?Ze.disabled:Mi(Ze),n=ve<=he,i=!qt&&ve>=me;n&&!t&&Ti(Ye,_e,!0),!n&&t&&Ti(Ye,_e,!1),i&&!e&&Ti(Ke,Ze,!0),!i&&e&&Ti(Ke,Ze,!1)}}function Ai(t,e){G&&(t.style[G]=e)}function Ni(t){return null==t&&(t=ve),Lt?(Ot-(Dt?Ht:0)-(Ct[t+1]-Ct[t]-Ht))/2:St?(Ot-St)/2:(kt-1)/2}function Bi(){var t=Ot+(Dt?Ht:0)-(St?(St+Ht)*re:Ct[re]);return Rt&&!Ft&&(t=St?-(St+Ht)*(re-1)-Ni():Ni(re-1)-Ct[re-1]),t>0&&(t=0),t}function Li(t){var e;if(null==t&&(t=ve),ft&&!Lt)if(St)e=-(St+Ht)*t,Rt&&(e+=Ni());else{var n=j?re:kt;Rt&&(t-=Ni()),e=100*-t/n}else e=-Ct[t],Rt&&Lt&&(e+=Ni());return oe&&(e=Math.max(e,ue)),e+=!ft||Lt||St?"px":"%"}function Si(t){Ai(pt,"0s"),Di(t)}function Di(t){null==t&&(t=Li()),"rtl"===Qt&&"-"===t.charAt(0)&&(t=t.substr(1)),pt.style[se]=ce+t+fe}function Hi(t,e,n,i){var a=t+kt;Ft||(a=Math.min(a,re));for(var r=t;r<a;r++){var o=gt[r];i||(o.style.left=100*(r-ve)/kt+"%"),ut&&Q&&(o.style[Q]=o.style[Y]=ut*(r-t)/1e3+"s"),g(o,e),m(o,n),i&&ie.push(o)}}function Oi(t,e){le&&Bn(),(ve!==pe||e)&&(we.emit("indexChanged",ia()),we.emit("transitionStart",ia()),jt&&pi(),pn&&t&&["click","keydown"].indexOf(t.type)>=0&&ji(),be=!0,Ln())}function Ri(t){return t.toLowerCase().replace(/-/g,"")}function ki(t){if(et||be){if(we.emit("transitionEnd",ia(t)),!et&&ie.length>0)for(var e=0;e<ie.length;e++){var n=ie[e];n.style.left="",Y&&Q&&(n.style[Y]="",n.style[Q]=""),g(n,ot),m(n,lt)}if(!t||!et&&t.target.parentNode===pt||t.target===pt&&Ri(t.propertyName)===Ri(se)){if(!le){var i=ve;Bn(),ve!==i&&(we.emit("indexChanged",ia()),Si())}"inner"===tt&&we.emit("innerLoaded",ia()),be=!1,pe=ve}}}function Ii(t,e){if(!Be)if("prev"===t)Pi(e,-1);else if("next"===t)Pi(e,1);else{if(be){if(ge)return;ki()}var n=On(),i=0;if("first"===t?i=-n:"last"===t?i=et?yt-kt-n:yt-1-n:("number"!=typeof t&&(t=parseInt(t)),isNaN(t)||(e||(t=Math.max(0,Math.min(yt-1,t))),i=t-n)),!et&&i&&Math.abs(i)<kt){var a=i>0?1:-1;i+=ve+i-yt>=he?yt*a:2*yt*a*-1}ve+=i,et&&Ft&&(ve<he&&(ve+=yt),ve>me&&(ve-=yt)),On(ve)!==On(pe)&&Oi(e)}}function Pi(t,e){if(be){if(ge)return;ki()}var n;if(!e){for(var i=Xi(t=Qi(t));i!==Je&&[_e,Ze].indexOf(i)<0;)i=i.parentNode;var a=[_e,Ze].indexOf(i);a>=0&&(n=!0,e=0===a?-1:1)}if(qt){if(ve===he&&-1===e)return void Ii("last",t);if(ve===me&&1===e)return void Ii("first",t)}e&&(ve+=It*e,Lt&&(ve=Math.floor(ve)),Oi(n||t&&"keydown"===t.type?t:null))}function zi(){vn=setInterval((function(){Pi(null,yn)}),Ut),pn=!0}function Wi(){clearInterval(vn),pn=!1}function qi(t,e){C(xn,{"data-action":t}),xn.innerHTML=Cn[0]+t+Cn[1]+e}function Fi(){zi(),xn&&qi("stop",_t[1])}function ji(){Wi(),xn&&qi("start",_t[0])}function Vi(){pn?(ji(),mn=!0):(Fi(),mn=!1)}function Gi(t){t.focus()}function Qi(t){return Yi(t=t||l.event)?t.changedTouches[0]:t}function Xi(t){return t.target||l.event.srcElement}function Yi(t){return t.type.indexOf("touch")>=0}function Ki(t){t.preventDefault?t.preventDefault():t.returnValue=!1}function Ji(){return r=En.y-Tn.y,o=En.x-Tn.x,e=Math.atan2(r,o)*(180/Math.PI),n=ye,i=!1,(a=Math.abs(90-Math.abs(e)))>=90-n?i="horizontal":a<=n&&(i="vertical"),i===t.axis;var e,n,i,a,r,o}function Ui(t){if(be){if(ge)return;ki()}Jt&&pn&&Wi(),An=!0,Mn&&(i(Mn),Mn=null);var e=Qi(t);we.emit(Yi(t)?"touchStart":"dragStart",ia(t)),!Yi(t)&&["img","a"].indexOf(Ci(Xi(t)))>=0&&Ki(t),En.x=Tn.x=e.clientX,En.y=Tn.y=e.clientY,et&&(wn=parseFloat(pt.style[se].replace(ce,"")),Ai(pt,"0s"))}function _i(t){if(An){var n=Qi(t);En.x=n.clientX,En.y=n.clientY,et?Mn||(Mn=e((function(){Zi(t)}))):("?"===xe&&(xe=Ji()),xe&&(Xe=!0)),("boolean"!=typeof t.cancelable||t.cancelable)&&Xe&&t.preventDefault()}}function Zi(t){if(xe){if(i(Mn),An&&(Mn=e((function(){Zi(t)}))),"?"===xe&&(xe=Ji()),xe){!Xe&&Yi(t)&&(Xe=!0);try{t.type&&we.emit(Yi(t)?"touchMove":"dragMove",ia(t))}catch(r){}var n=wn,a=Nn(En,Tn);if(!ft||St||Lt)n+=a,n+="px";else n+=j?a*kt*100/((Ot+Ht)*re):100*a/(Ot+Ht),n+="%";pt.style[se]=ce+n+fe}}else An=!1}function $i(n){if(An){Mn&&(i(Mn),Mn=null),et&&Ai(pt,""),An=!1;var a=Qi(n);En.x=a.clientX,En.y=a.clientY;var r=Nn(En,Tn);if(Math.abs(r)){if(!Yi(n)){var o=Xi(n);R(o,{click:function t(e){Ki(e),k(o,{click:t})}})}et?Mn=e((function(){if(ft&&!Lt){var t=-r*kt/(Ot+Ht);t=r>0?Math.floor(t):Math.ceil(t),ve+=t,ve+="rtl"===Qt?-1*t:t}else{var e=-(wn+r);if(e<=0)ve=he;else if(e>=Ct[re-1])ve=me;else for(var i=0;i<re&&e>=Ct[i];)ve=i,e>Ct[i]&&r<0&&(ve+=1),i++}Oi(n,r),we.emit(Yi(n)?"touchEnd":"dragEnd",ia(n))})):xe&&Pi(n,r>0?-1:1)}}"auto"===t.preventScrollOnTouch&&(Xe=!1),ye&&(xe="?"),Jt&&!pn&&zi()}function ta(){(st||vt).style.height=Ct[ve+kt]-Ct[ve]+"px"}function ea(){var t=St?(St+Ht)*yt/Ot:yt/kt;return Math.min(Math.ceil(t),yt)}function na(){if(Xt&&!We&&rn!==on){var t=on,e=rn,n=N;for(on>rn&&(t=rn,e=on,n=A);t<e;)n(en[t]),t++;on=rn}}function ia(t){return{container:pt,slideItems:gt,navContainer:nn,navItems:en,controlsContainer:Je,hasControls:Pe,prevButton:_e,nextButton:Ze,items:kt,slideBy:It,cloneCount:ae,slideCount:yt,slideCountNew:re,index:ve,indexCached:pe,displayIndex:Dn(),navCurrentIndex:ln,navCurrentIndexCached:sn,pages:rn,pagesCached:on,sheet:te,isOn:bt,event:t||{}}}U&&console.warn("No slides found in",t.container)};return P}();!function(){"use strict";window.kadenceSlide={start:function(t){var e="ltr",a=(t.getAttribute("data-slider-type"),parseInt(t.getAttribute("data-slider-speed"))),i=parseInt(t.getAttribute("data-slider-anim-speed")),n=t.getAttribute("data-slider-arrows"),r=t.getAttribute("data-slider-dots"),s=t.getAttribute("data-slider-pause-hover"),d=t.getAttribute("data-slider-auto"),l=parseInt(t.getAttribute("data-columns-xxl")),o=parseInt(t.getAttribute("data-columns-xl")),u=parseInt(t.getAttribute("data-columns-md")),c=parseInt(t.getAttribute("data-columns-sm")),p=parseInt(t.getAttribute("data-columns-xs")),m=parseInt(t.getAttribute("data-columns-ss")),g=parseInt(t.getAttribute("data-slider-gutter")),A=parseInt(t.getAttribute("data-slider-scroll"));t.getAttribute("data-slider-center-mode");document.body.classList.contains("rtl")&&(e="rtl"),1!==A&&(A="page");tns({container:t,items:m,slideBy:A,autoplay:"true"===d,speed:i,autoplayTimeout:a,autoplayHoverPause:"true"===s,controls:"false"!==n,nav:"false"!==r,gutter:g,textDirection:e,responsive:{543:{items:p},767:{items:c},991:{items:u},1199:{items:o},1499:{items:l}}})},initAll:function(t){document.querySelectorAll(".kadence-slide-init").forEach((function(t){window.kadenceSlide.start(t)}))},init:function(){if("function"==typeof tns)window.kadenceSlide.initAll();else var t=setInterval((function(){"function"==typeof tns&&(window.kadenceSlide.initAll(),clearInterval(t))}),200)}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",window.kadenceSlide.init):window.kadenceSlide.init()}()";s:12:"dependencies";a:0:{}}